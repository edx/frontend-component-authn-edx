{"version":3,"file":"service.js","names":["getConfig","getAuthenticatedHttpClient","fetchThirdPartyAuthContext","urlParams","requestConfig","headers","params","isPublic","data","get","LMS_BASE_URL","catch","e","thirdPartyAuthContext","contextData"],"sources":["../../../src/authn-component/data/service.js"],"sourcesContent":["import { getConfig } from '@edx/frontend-platform';\nimport { getAuthenticatedHttpClient } from '@edx/frontend-platform/auth';\n\n/**\n * Fetches third-party authentication context data from the specified URL with the given parameters.\n *\n * @param {Object} urlParams - The URL parameters to include in the request.\n * @returns {Object} An object containing the third-party authentication context data.\n * @throws {Error} If the request fails.\n */\nasync function fetchThirdPartyAuthContext(urlParams) {\n  const requestConfig = {\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    params: urlParams,\n    isPublic: true,\n  };\n\n  const { data } = await getAuthenticatedHttpClient()\n    .get(\n      `${getConfig().LMS_BASE_URL}/api/mfe_context`,\n      requestConfig,\n    )\n    .catch((e) => {\n      throw (e);\n    });\n\n  return {\n    thirdPartyAuthContext: data.contextData || {},\n  };\n}\n\nexport default fetchThirdPartyAuthContext;\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,wBAAwB;AAClD,SAASC,0BAA0B,QAAQ,6BAA6B;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeC,0BAA0BA,CAACC,SAAS,EAAE;EACnD,MAAMC,aAAa,GAAG;IACpBC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAoC,CAAC;IAChEC,MAAM,EAAEH,SAAS;IACjBI,QAAQ,EAAE;EACZ,CAAC;EAED,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMP,0BAA0B,CAAC,CAAC,CAChDQ,GAAG,CACD,GAAET,SAAS,CAAC,CAAC,CAACU,YAAa,kBAAiB,EAC7CN,aACF,CAAC,CACAO,KAAK,CAAEC,CAAC,IAAK;IACZ,MAAOA,CAAC;EACV,CAAC,CAAC;EAEJ,OAAO;IACLC,qBAAqB,EAAEL,IAAI,CAACM,WAAW,IAAI,CAAC;EAC9C,CAAC;AACH;AAEA,eAAeZ,0BAA0B","ignoreList":[]}