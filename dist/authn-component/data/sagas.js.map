{"version":3,"file":"sagas.js","names":["logError","call","put","takeEvery","getThirdPartyAuthContext","getThirdPartyAuthContextFailed","getThirdPartyAuthContextSuccess","fetchThirdPartyAuthContext","fetchThirdPartyAuthContextSaga","action","thirdPartyAuthContext","payload","e","saga","type"],"sources":["../../../src/authn-component/data/sagas.js"],"sourcesContent":["import { logError } from '@edx/frontend-platform/logging';\nimport { call, put, takeEvery } from 'redux-saga/effects';\n\nimport {\n  getThirdPartyAuthContext,\n  getThirdPartyAuthContextFailed,\n  getThirdPartyAuthContextSuccess,\n} from './reducers';\nimport fetchThirdPartyAuthContext from './service';\n\n/**\n * Saga function for fetching third party auth context data.\n */\nexport function* fetchThirdPartyAuthContextSaga(action) {\n  try {\n    const { thirdPartyAuthContext } = yield call(fetchThirdPartyAuthContext, action.payload);\n\n    yield put(getThirdPartyAuthContextSuccess(thirdPartyAuthContext));\n  } catch (e) {\n    yield put(getThirdPartyAuthContextFailed());\n    logError(e);\n  }\n}\n\n/**\n * Root Saga function that listens for TPA actions and calls the fetchThirdPartyAuthContext saga.\n */\nexport default function* saga() {\n  yield takeEvery(getThirdPartyAuthContext.type, fetchThirdPartyAuthContextSaga);\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,gCAAgC;AACzD,SAASC,IAAI,EAAEC,GAAG,EAAEC,SAAS,QAAQ,oBAAoB;AAEzD,SACEC,wBAAwB,EACxBC,8BAA8B,EAC9BC,+BAA+B,QAC1B,YAAY;AACnB,OAAOC,0BAA0B,MAAM,WAAW;;AAElD;AACA;AACA;AACA,OAAO,UAAUC,8BAA8BA,CAACC,MAAM,EAAE;EACtD,IAAI;IACF,MAAM;MAAEC;IAAsB,CAAC,GAAG,MAAMT,IAAI,CAACM,0BAA0B,EAAEE,MAAM,CAACE,OAAO,CAAC;IAExF,MAAMT,GAAG,CAACI,+BAA+B,CAACI,qBAAqB,CAAC,CAAC;EACnE,CAAC,CAAC,OAAOE,CAAC,EAAE;IACV,MAAMV,GAAG,CAACG,8BAA8B,CAAC,CAAC,CAAC;IAC3CL,QAAQ,CAACY,CAAC,CAAC;EACb;AACF;;AAEA;AACA;AACA;AACA,eAAe,UAAUC,IAAIA,CAAA,EAAG;EAC9B,MAAMV,SAAS,CAACC,wBAAwB,CAACU,IAAI,EAAEN,8BAA8B,CAAC;AAChF","ignoreList":[]}