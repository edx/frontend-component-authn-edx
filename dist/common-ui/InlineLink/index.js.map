{"version":3,"file":"index.js","names":["React","Hyperlink","PropTypes","InlineLink","_ref","className","destination","linkHelpText","linkText","onClick","targetBlank","handleClick","e","preventDefault","createElement","target","isInline","showLaunchIcon","propTypes","string","func","isRequired","bool"],"sources":["../../../src/common-ui/InlineLink/index.jsx"],"sourcesContent":["import React from 'react';\n\nimport { Hyperlink } from '@openedx/paragon';\nimport PropTypes from 'prop-types';\n\n/**\n * A component that serves two purposes:\n * 1. External redirection with `destination`.\n * 2. Internal redirection with `onClick`.\n *\n * When `destination` is provided, clicking the link will navigate to the specified URL.\n * If `onClick` is provided, clicking the link will trigger the `onClick` function instead of navigating externally.\n *\n * @param {string} className - Additional class name for styling.\n * @param {string} destination - The URL to redirect to when clicked. Only used if `onClick` is `null`.\n * @param {string} linkHelpText - The help text displayed alongside the link.\n * @param {string} linkText - The text displayed for the link.\n * @param {Function} onClick - The function to call when the link is clicked. If provided, `destination` is ignored.\n * @param {boolean} targetBlank - Tells whether to open the link in a new tab or not\n */\nconst InlineLink = ({\n  className = '',\n  destination = '',\n  linkHelpText = '',\n  linkText,\n  onClick = null,\n  targetBlank = false,\n}) => {\n  const handleClick = (e) => {\n    if (onClick) {\n      e.preventDefault();\n      onClick();\n    }\n  };\n\n  return (\n    <div className={`popup-container_inline-link_container ${className}`}>\n      {linkHelpText && (\n        <span className=\"text-gray-800\">\n          {linkHelpText}\n        </span>\n      )}\n      <Hyperlink\n        target={targetBlank ? '_blank' : '_self'}\n        className=\"pl-1 popup-container_inline-link_hyperlink\"\n        destination={destination}\n        onClick={handleClick}\n        isInline\n        showLaunchIcon={false}\n      >\n        {linkText}\n      </Hyperlink>\n    </div>\n  );\n};\n\nInlineLink.propTypes = {\n  className: PropTypes.string,\n  destination: PropTypes.string,\n  onClick: PropTypes.func,\n  linkHelpText: PropTypes.string,\n  linkText: PropTypes.string.isRequired,\n  targetBlank: PropTypes.bool,\n};\n\nexport default InlineLink;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,SAAS,MAAM,YAAY;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,GAAGC,IAAA,IAOb;EAAA,IAPc;IAClBC,SAAS,GAAG,EAAE;IACdC,WAAW,GAAG,EAAE;IAChBC,YAAY,GAAG,EAAE;IACjBC,QAAQ;IACRC,OAAO,GAAG,IAAI;IACdC,WAAW,GAAG;EAChB,CAAC,GAAAN,IAAA;EACC,MAAMO,WAAW,GAAIC,CAAC,IAAK;IACzB,IAAIH,OAAO,EAAE;MACXG,CAAC,CAACC,cAAc,CAAC,CAAC;MAClBJ,OAAO,CAAC,CAAC;IACX;EACF,CAAC;EAED,oBACET,KAAA,CAAAc,aAAA;IAAKT,SAAS,EAAG,yCAAwCA,SAAU;EAAE,GAClEE,YAAY,iBACXP,KAAA,CAAAc,aAAA;IAAMT,SAAS,EAAC;EAAe,GAC5BE,YACG,CACP,eACDP,KAAA,CAAAc,aAAA,CAACb,SAAS;IACRc,MAAM,EAAEL,WAAW,GAAG,QAAQ,GAAG,OAAQ;IACzCL,SAAS,EAAC,4CAA4C;IACtDC,WAAW,EAAEA,WAAY;IACzBG,OAAO,EAAEE,WAAY;IACrBK,QAAQ;IACRC,cAAc,EAAE;EAAM,GAErBT,QACQ,CACR,CAAC;AAEV,CAAC;AAEDL,UAAU,CAACe,SAAS,GAAG;EACrBb,SAAS,EAAEH,SAAS,CAACiB,MAAM;EAC3Bb,WAAW,EAAEJ,SAAS,CAACiB,MAAM;EAC7BV,OAAO,EAAEP,SAAS,CAACkB,IAAI;EACvBb,YAAY,EAAEL,SAAS,CAACiB,MAAM;EAC9BX,QAAQ,EAAEN,SAAS,CAACiB,MAAM,CAACE,UAAU;EACrCX,WAAW,EAAER,SAAS,CAACoB;AACzB,CAAC;AAED,eAAenB,UAAU","ignoreList":[]}