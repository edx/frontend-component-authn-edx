{"version":3,"file":"SSOFailureAlert.js","names":["React","useIntl","Alert","PropTypes","messages","TPA_AUTHENTICATION_FAILURE","SSOFailureAlert","props","formatMessage","context","errorCode","alertTitle","errorMessage","createElement","TPAAuthenticationFailure","lineBreak","id","className","variant","propTypes","shape","string","isRequired","node"],"sources":["../../../src/forms/common-components/SSOFailureAlert.jsx"],"sourcesContent":["import React from 'react';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport { Alert } from '@openedx/paragon';\nimport PropTypes from 'prop-types';\n\nimport messages from './messages';\nimport { TPA_AUTHENTICATION_FAILURE } from '../../data/constants';\n\n/**\n * SSOFailureAlert component displays an error alert based on the provided error code.\n * It accepts the following props:\n * - errorCode: The error code indicating the type of error.\n * - context: Additional context for the error, such as error message.\n * - alertTitle: Optional title for the alert.\n */\nconst SSOFailureAlert = (props) => {\n  const { formatMessage } = useIntl();\n  const { context = {}, errorCode, alertTitle = null } = props;\n\n  if (!errorCode || errorCode !== TPA_AUTHENTICATION_FAILURE) {\n    return null;\n  }\n  const errorMessage = errorCode === TPA_AUTHENTICATION_FAILURE\n    ? (\n      <span>\n        {formatMessage(messages.TPAAuthenticationFailure, {\n          lineBreak: <br />,\n          errorMessage: context.errorMessage,\n        })}\n      </span>\n    )\n    : null;\n\n  return (\n    <Alert id=\"SSO-failure-alert\" className=\"mb-4\" variant=\"danger\">\n      {alertTitle && <span>{alertTitle}</span>} {errorMessage}\n    </Alert>\n  );\n};\n\nSSOFailureAlert.propTypes = {\n  context: PropTypes.shape({\n    errorMessage: PropTypes.string,\n  }),\n  errorCode: PropTypes.string.isRequired,\n  alertTitle: PropTypes.node,\n};\n\nexport default SSOFailureAlert;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,OAAO,QAAQ,6BAA6B;AACrD,SAASC,KAAK,QAAQ,kBAAkB;AACxC,OAAOC,SAAS,MAAM,YAAY;AAElC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,0BAA0B,QAAQ,sBAAsB;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,eAAe,GAAIC,KAAK,IAAK;EACjC,MAAM;IAAEC;EAAc,CAAC,GAAGP,OAAO,CAAC,CAAC;EACnC,MAAM;IAAEQ,OAAO,GAAG,CAAC,CAAC;IAAEC,SAAS;IAAEC,UAAU,GAAG;EAAK,CAAC,GAAGJ,KAAK;EAE5D,IAAI,CAACG,SAAS,IAAIA,SAAS,KAAKL,0BAA0B,EAAE;IAC1D,OAAO,IAAI;EACb;EACA,MAAMO,YAAY,GAAGF,SAAS,KAAKL,0BAA0B,gBAEzDL,KAAA,CAAAa,aAAA,eACGL,aAAa,CAACJ,QAAQ,CAACU,wBAAwB,EAAE;IAChDC,SAAS,eAAEf,KAAA,CAAAa,aAAA,WAAK,CAAC;IACjBD,YAAY,EAAEH,OAAO,CAACG;EACxB,CAAC,CACG,CAAC,GAEP,IAAI;EAER,oBACEZ,KAAA,CAAAa,aAAA,CAACX,KAAK;IAACc,EAAE,EAAC,mBAAmB;IAACC,SAAS,EAAC,MAAM;IAACC,OAAO,EAAC;EAAQ,GAC5DP,UAAU,iBAAIX,KAAA,CAAAa,aAAA,eAAOF,UAAiB,CAAC,EAAC,GAAC,EAACC,YACtC,CAAC;AAEZ,CAAC;AAEDN,eAAe,CAACa,SAAS,GAAG;EAC1BV,OAAO,EAAEN,SAAS,CAACiB,KAAK,CAAC;IACvBR,YAAY,EAAET,SAAS,CAACkB;EAC1B,CAAC,CAAC;EACFX,SAAS,EAAEP,SAAS,CAACkB,MAAM,CAACC,UAAU;EACtCX,UAAU,EAAER,SAAS,CAACoB;AACxB,CAAC;AAED,eAAejB,eAAe","ignoreList":[]}