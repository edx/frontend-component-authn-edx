{"version":3,"file":"AuthenticatedRedirection.js","names":["getConfig","PropTypes","setCurrentOpenedForm","PROGRESSIVE_PROFILING_FORM","LINK_TIMEOUT","useDispatch","setCookie","setProgressiveProfilingRedirectUrl","AuthenticatedRedirection","_ref","finishAuthUrl","redirectUrl","redirectToProgressiveProfilingForm","success","isLinkTracked","dispatch","finalRedirectUrl","includes","LMS_BASE_URL","setTimeout","window","location","href","propTypes","string","bool"],"sources":["../../../src/forms/common-components/AuthenticatedRedirection.jsx"],"sourcesContent":["import { getConfig } from '@edx/frontend-platform';\nimport PropTypes from 'prop-types';\n\nimport { setCurrentOpenedForm } from '../../authn-component/data/reducers';\nimport { PROGRESSIVE_PROFILING_FORM } from '../../data/constants';\nimport { LINK_TIMEOUT } from '../../data/segment/utils';\nimport { useDispatch } from '../../data/storeHooks';\nimport { setCookie } from '../../data/utils';\nimport {\n  setProgressiveProfilingRedirectUrl,\n} from '../progressive-profiling-popup/data/reducers';\n\n/**\n * Component that handles redirection after successful authentication.\n *\n * Redirections:\n * - Redirects to progressive profiling form if redirectToProgressiveProfilingForm is true.\n * - Redirects to the finishAuthUrl if provided and not already included in redirectUrl,\n * otherwise redirects to the specified redirectUrl.\n *\n * @param {string} finishAuthUrl - The URL to complete the authentication pipeline.\n * @param {string} redirectUrl - The URL to redirect to after authentication.\n * @param {boolean} redirectToProgressiveProfilingForm - Flag indicating if to redirect to progressive profiling.\n * @param {boolean} success - Flag indicating if authentication was successful.\n *\n * @returns {null} This component does not render anything, it handles redirects.\n */\nconst AuthenticatedRedirection = ({\n  finishAuthUrl = null,\n  redirectUrl = '',\n  redirectToProgressiveProfilingForm = false,\n  success = false,\n  isLinkTracked = false,\n}) => {\n  const dispatch = useDispatch();\n\n  if (success) {\n    let finalRedirectUrl = '';\n\n    // If we're in a third party auth pipeline, we must complete the pipeline\n    // once user has successfully logged in. Otherwise, redirect to the specified redirect url.\n    // Note: For multiple enterprise use case, we need to make sure that user first visits the\n    // enterprise selection page and then complete the auth workflow\n    if (finishAuthUrl && !redirectUrl.includes(finishAuthUrl)) {\n      finalRedirectUrl = getConfig().LMS_BASE_URL + finishAuthUrl;\n    } else {\n      finalRedirectUrl = redirectUrl;\n    }\n\n    // Redirect to Progressive Profiling after successful registration\n    if (redirectToProgressiveProfilingForm) {\n      // TODO: Do we still need this cookie?\n      setCookie('van-504-returning-user', true);\n\n      dispatch(setProgressiveProfilingRedirectUrl(finalRedirectUrl));\n      dispatch(setCurrentOpenedForm(PROGRESSIVE_PROFILING_FORM));\n      return null;\n    }\n\n    if (isLinkTracked) {\n      setTimeout(() => { window.location.href = finalRedirectUrl; }, LINK_TIMEOUT);\n    } else {\n      window.location.href = finalRedirectUrl;\n    }\n  }\n\n  return null;\n};\n\nAuthenticatedRedirection.propTypes = {\n  finishAuthUrl: PropTypes.string,\n  success: PropTypes.bool,\n  redirectUrl: PropTypes.string,\n  redirectToProgressiveProfilingForm: PropTypes.bool,\n  isLinkTracked: PropTypes.bool,\n};\n\nexport default AuthenticatedRedirection;\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,wBAAwB;AAClD,OAAOC,SAAS,MAAM,YAAY;AAElC,SAASC,oBAAoB,QAAQ,qCAAqC;AAC1E,SAASC,0BAA0B,QAAQ,sBAAsB;AACjE,SAASC,YAAY,QAAQ,0BAA0B;AACvD,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SACEC,kCAAkC,QAC7B,8CAA8C;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,wBAAwB,GAAGC,IAAA,IAM3B;EAAA,IAN4B;IAChCC,aAAa,GAAG,IAAI;IACpBC,WAAW,GAAG,EAAE;IAChBC,kCAAkC,GAAG,KAAK;IAC1CC,OAAO,GAAG,KAAK;IACfC,aAAa,GAAG;EAClB,CAAC,GAAAL,IAAA;EACC,MAAMM,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,IAAIQ,OAAO,EAAE;IACX,IAAIG,gBAAgB,GAAG,EAAE;;IAEzB;IACA;IACA;IACA;IACA,IAAIN,aAAa,IAAI,CAACC,WAAW,CAACM,QAAQ,CAACP,aAAa,CAAC,EAAE;MACzDM,gBAAgB,GAAGhB,SAAS,CAAC,CAAC,CAACkB,YAAY,GAAGR,aAAa;IAC7D,CAAC,MAAM;MACLM,gBAAgB,GAAGL,WAAW;IAChC;;IAEA;IACA,IAAIC,kCAAkC,EAAE;MACtC;MACAN,SAAS,CAAC,wBAAwB,EAAE,IAAI,CAAC;MAEzCS,QAAQ,CAACR,kCAAkC,CAACS,gBAAgB,CAAC,CAAC;MAC9DD,QAAQ,CAACb,oBAAoB,CAACC,0BAA0B,CAAC,CAAC;MAC1D,OAAO,IAAI;IACb;IAEA,IAAIW,aAAa,EAAE;MACjBK,UAAU,CAAC,MAAM;QAAEC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGN,gBAAgB;MAAE,CAAC,EAAEZ,YAAY,CAAC;IAC9E,CAAC,MAAM;MACLgB,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGN,gBAAgB;IACzC;EACF;EAEA,OAAO,IAAI;AACb,CAAC;AAEDR,wBAAwB,CAACe,SAAS,GAAG;EACnCb,aAAa,EAAET,SAAS,CAACuB,MAAM;EAC/BX,OAAO,EAAEZ,SAAS,CAACwB,IAAI;EACvBd,WAAW,EAAEV,SAAS,CAACuB,MAAM;EAC7BZ,kCAAkC,EAAEX,SAAS,CAACwB,IAAI;EAClDX,aAAa,EAAEb,SAAS,CAACwB;AAC3B,CAAC;AAED,eAAejB,wBAAwB","ignoreList":[]}