{"version":3,"file":"LoginFailureAlert.js","names":["React","getConfig","useIntl","Alert","Hyperlink","PropTypes","setCurrentOpenedForm","FORBIDDEN_REQUEST","FORGOT_PASSWORD_FORM","INTERNAL_SERVER_ERROR","INVALID_FORM","TPA_AUTHENTICATION_FAILURE","useDispatch","ACCOUNT_LOCKED_OUT","ALLOWED_DOMAIN_LOGIN_ERROR","FAILED_LOGIN_ATTEMPT","INACTIVE_USER","INCORRECT_EMAIL_PASSWORD","NON_COMPLIANT_PASSWORD_EXCEPTION","messages","LoginFailureAlert","props","dispatch","formatMessage","context","errorCode","handleResetPasswordLinkClick","event","preventDefault","resetLink","createElement","destination","isInline","loginIncorrectCredentialsErrorResetLinkText","errorMessage","Fragment","nonCompliantPasswordTitle","nonCompliantPasswordMessage","loginRateLimitReachedMessage","supportLink","href","contactSupportLink","platformName","loginInactiveUserError","lineBreak","email","className","url","LMS_BASE_URL","tpaHint","tpaLink","tpaAccountLink","provider","allowedDomainLoginError","allowedDomain","loginFormInvalidErrorMessage","onClick","loginIncorrectCredentialsErrorBeforeAccountBlockedText","loginIncorrectCredentialsErrorAttemptsText1","remainingAttempts","loginIncorrectCredentialsErrorAttemptsText2","accountLockedOutMessage1","accountLockedOutMessage2","failureCount","loginIncorrectCredentialsError","loginIncorrectCredentialsErrorWithResetLink","internalServerErrorMessage","id","variant","loginFailureHeaderTitle","propTypes","shape","string","number","isRequired"],"sources":["../../../../src/forms/login-popup/components/LoginFailureAlert.jsx"],"sourcesContent":["import React from 'react';\n\nimport { getConfig } from '@edx/frontend-platform';\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport { Alert, Hyperlink } from '@openedx/paragon';\nimport PropTypes from 'prop-types';\n\nimport { setCurrentOpenedForm } from '../../../authn-component/data/reducers';\nimport {\n  FORBIDDEN_REQUEST, FORGOT_PASSWORD_FORM,\n  INTERNAL_SERVER_ERROR,\n  INVALID_FORM,\n  TPA_AUTHENTICATION_FAILURE,\n} from '../../../data/constants';\nimport { useDispatch } from '../../../data/storeHooks';\nimport {\n  ACCOUNT_LOCKED_OUT,\n  ALLOWED_DOMAIN_LOGIN_ERROR,\n  FAILED_LOGIN_ATTEMPT,\n  INACTIVE_USER,\n  INCORRECT_EMAIL_PASSWORD,\n  NON_COMPLIANT_PASSWORD_EXCEPTION,\n} from '../data/constants';\nimport messages from '../messages';\n\n/**\n * LoginFailureAlert component that is responsible to show error alert based on error code.\n * It accepts the following props\n * - errorCode\n * - context\n */\n\nconst LoginFailureAlert = (props) => {\n  const dispatch = useDispatch();\n  const { formatMessage } = useIntl();\n  const { context = {}, errorCode } = props;\n\n  const handleResetPasswordLinkClick = (event) => {\n    event.preventDefault();\n    dispatch(setCurrentOpenedForm(FORGOT_PASSWORD_FORM));\n  };\n\n  if (!errorCode || errorCode === TPA_AUTHENTICATION_FAILURE) {\n    return null;\n  }\n\n  let resetLink = (\n    <Hyperlink destination=\"reset\" isInline>\n      {formatMessage(messages.loginIncorrectCredentialsErrorResetLinkText)}\n    </Hyperlink>\n  );\n\n  let errorMessage;\n  switch (errorCode) {\n    case NON_COMPLIANT_PASSWORD_EXCEPTION: {\n      errorMessage = (\n        <>\n          <strong>{formatMessage(messages.nonCompliantPasswordTitle)}</strong>\n          <p>{formatMessage(messages.nonCompliantPasswordMessage)}</p>\n        </>\n      );\n      break;\n    }\n    case FORBIDDEN_REQUEST:\n      errorMessage = <span>{formatMessage(messages.loginRateLimitReachedMessage)}</span>;\n      break;\n    case INACTIVE_USER: {\n      const supportLink = (\n        <a href={context.supportLink}>\n          {formatMessage(messages.contactSupportLink, { platformName: context.platformName })}\n        </a>\n      );\n      errorMessage = (\n        <span>\n          {formatMessage(messages.loginInactiveUserError, {\n            lineBreak: <br />,\n            email: <strong className=\"data-hj-suppress\">{context.email}</strong>,\n            supportLink,\n          })}\n        </span>\n      );\n      break;\n    }\n    case ALLOWED_DOMAIN_LOGIN_ERROR: {\n      const url = `${getConfig().LMS_BASE_URL}/dashboard/?tpa_hint=${context.tpaHint}`;\n      const tpaLink = (\n        <a href={url}>\n          {formatMessage(messages.tpaAccountLink, { provider: context.provider })}\n        </a>\n      );\n      errorMessage = (\n        <span>\n          {formatMessage(messages.allowedDomainLoginError, { allowedDomain: context.allowedDomain, tpaLink })}\n        </span>\n      );\n      break;\n    }\n    case INVALID_FORM:\n      errorMessage = <span>{formatMessage(messages.loginFormInvalidErrorMessage)}</span>;\n      break;\n    case FAILED_LOGIN_ATTEMPT: {\n      resetLink = (\n        <Hyperlink\n          className=\"popup_login_form__inline_link-cursor\"\n          onClick={handleResetPasswordLinkClick}\n          isInline\n        >\n          {formatMessage(messages.loginIncorrectCredentialsErrorBeforeAccountBlockedText)}\n        </Hyperlink>\n      );\n      errorMessage = (\n        <>\n          <span>\n            {formatMessage(messages.loginIncorrectCredentialsErrorAttemptsText1, {\n              remainingAttempts: context.remainingAttempts,\n            })}\n          </span>\n          <p>\n            {formatMessage(messages.loginIncorrectCredentialsErrorAttemptsText2, { resetLink })}\n          </p>\n        </>\n      );\n      break;\n    }\n    case ACCOUNT_LOCKED_OUT: {\n      errorMessage = (\n        <>\n          <span>{formatMessage(messages.accountLockedOutMessage1)}</span>\n          <p>{formatMessage(messages.accountLockedOutMessage2, { resetLink })}</p>\n        </>\n      );\n      break;\n    }\n    case INCORRECT_EMAIL_PASSWORD:\n      if (context.failureCount <= 1) {\n        errorMessage = <span>{formatMessage(messages.loginIncorrectCredentialsError)}</span>;\n      } else if (context.failureCount === 2) {\n        errorMessage = (\n          <span>\n            {formatMessage(messages.loginIncorrectCredentialsErrorWithResetLink, { resetLink })}\n          </span>\n        );\n      }\n      break;\n    case INTERNAL_SERVER_ERROR:\n    default:\n      errorMessage = <span>{formatMessage(messages.internalServerErrorMessage)}</span>;\n      break;\n  }\n\n  return (\n    <Alert id=\"login-failure-alert\" className=\"mb-4\" variant=\"danger\">\n      {formatMessage(messages.loginFailureHeaderTitle)} { errorMessage }\n    </Alert>\n  );\n};\n\nLoginFailureAlert.propTypes = {\n  context: PropTypes.shape({\n    supportLink: PropTypes.string,\n    platformName: PropTypes.string,\n    tpaHint: PropTypes.string,\n    provider: PropTypes.string,\n    allowedDomain: PropTypes.string,\n    remainingAttempts: PropTypes.number,\n    failureCount: PropTypes.number,\n    errorMessage: PropTypes.string,\n    email: PropTypes.string,\n  }),\n  errorCode: PropTypes.string.isRequired,\n};\n\nexport default LoginFailureAlert;\n"],"mappings":"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","ignoreList":[]}