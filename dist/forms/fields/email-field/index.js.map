{"version":3,"file":"index.js","names":["React","forwardRef","useState","useIntl","Alert","Form","Icon","Close","Error","classNames","PropTypes","messages","validateEmail","useDispatch","useSelector","clearRegistrationBackendError","fetchRealtimeValidations","getValidationMessage","EmailField","props","ref","dispatch","formatMessage","name","value","isRegistration","handleChange","floatingLabel","errorMessage","handleErrorChange","validateEmailFromBackend","validationApiRateLimited","state","register","emailSuggestion","setEmailSuggestion","handleOnBlur","e","fieldValue","target","fieldError","suggestion","email","error","handleOnFocus","handleSuggestionClick","event","preventDefault","type","handleSuggestionClosed","renderEmailFeedback","createElement","variant","className","icon","didYouMeanAlertText","Link","href","onClick","src","tabIndex","id","Group","controlId","Control","onChange","onBlur","onFocus","Feedback","key","hasIcon","propTypes","string","isRequired","func","bool"],"sources":["../../../../src/forms/fields/email-field/index.jsx"],"sourcesContent":["import React, { forwardRef, useState } from 'react';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport { Alert, Form, Icon } from '@openedx/paragon';\nimport { Close, Error } from '@openedx/paragon/icons';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport messages from './messages';\nimport validateEmail from './validator';\nimport { useDispatch, useSelector } from '../../../data/storeHooks';\nimport { clearRegistrationBackendError, fetchRealtimeValidations } from '../../registration-popup/data/reducers';\nimport getValidationMessage from '../../reset-password-popup/forgot-password/data/utils';\n\nimport './index.scss';\n\nconst EmailField = forwardRef((props, ref) => {\n  const dispatch = useDispatch();\n  const { formatMessage } = useIntl();\n  const {\n    name,\n    value,\n    isRegistration = true,\n    handleChange,\n    floatingLabel,\n    errorMessage = '',\n    handleErrorChange = () => {},\n    validateEmailFromBackend = true,\n  } = props;\n\n  const validationApiRateLimited = useSelector(state => state.register?.validationApiRateLimited);\n\n  const [emailSuggestion, setEmailSuggestion] = useState({});\n\n  const handleOnBlur = (e) => {\n    const { value: fieldValue } = e.target;\n    if (isRegistration) {\n      const { fieldError, suggestion } = validateEmail(fieldValue, formatMessage);\n\n      setEmailSuggestion(suggestion);\n\n      if (fieldError) {\n        handleErrorChange('email', fieldError);\n      } else if (!validationApiRateLimited && validateEmailFromBackend) {\n        dispatch(fetchRealtimeValidations({ email: fieldValue }));\n      }\n    } else {\n      const error = getValidationMessage(fieldValue, formatMessage);\n      handleErrorChange('email', error);\n    }\n  };\n\n  const handleOnFocus = () => {\n    handleErrorChange('email', '');\n    dispatch(clearRegistrationBackendError('email'));\n  };\n\n  const handleSuggestionClick = (event) => {\n    event.preventDefault();\n    handleErrorChange('email', '');\n    handleChange({ target: { name: 'email', value: emailSuggestion.suggestion } });\n    setEmailSuggestion({ suggestion: '', type: '' });\n  };\n\n  const handleSuggestionClosed = () => setEmailSuggestion({ suggestion: '', type: '' });\n\n  const renderEmailFeedback = () => {\n    if (emailSuggestion.type === 'error') {\n      return (\n        <Alert variant=\"danger\" className=\"email-suggestion-alert-error mt-1\" icon={Error}>\n          <span className=\"email-suggestion__text\">\n            {formatMessage(messages.didYouMeanAlertText)}{' '}\n            <Alert.Link\n              href=\"#\"\n              name=\"email\"\n              onClick={handleSuggestionClick}\n            >\n              {emailSuggestion.suggestion}\n            </Alert.Link>?\n            <Icon src={Close} className=\"email-suggestion__close\" onClick={handleSuggestionClosed} tabIndex=\"0\" />\n          </span>\n        </Alert>\n      );\n    }\n    return (\n      <span id=\"email-warning\" className=\"small\">\n        {formatMessage(messages.didYouMeanAlertText)}:{' '}\n        <Alert.Link\n          href=\"#\"\n          name=\"email\"\n          className=\"email-suggestion-alert-warning\"\n          onClick={handleSuggestionClick}\n        >\n          {emailSuggestion.suggestion}\n        </Alert.Link>?\n      </span>\n    );\n  };\n\n  return (\n    <Form.Group\n      controlId=\"email\"\n      className=\"w-100 mb-4\"\n    >\n      <Form.Control\n        className={classNames(\n          'mr-0',\n          {\n            'yellow-border': emailSuggestion.type === 'warning' && isRegistration,\n          },\n        )}\n        type=\"email\"\n        name={name}\n        value={value}\n        onChange={handleChange}\n        onBlur={handleOnBlur}\n        onFocus={handleOnFocus}\n        floatingLabel={floatingLabel}\n        ref={ref}\n      />\n\n      {errorMessage !== '' && (\n        <Form.Control.Feedback key=\"error\" className=\"form-text-size validation-error-margin\" hasIcon={false} feedback-for={props.name} type=\"invalid\">\n          {errorMessage}\n        </Form.Control.Feedback>\n      )}\n      {emailSuggestion.suggestion && isRegistration ? renderEmailFeedback() : null}\n    </Form.Group>\n  );\n});\n\nEmailField.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleErrorChange: PropTypes.func,\n  floatingLabel: PropTypes.string.isRequired,\n  errorMessage: PropTypes.string,\n  isRegistration: PropTypes.bool,\n  validateEmailFromBackend: PropTypes.bool,\n};\n\nexport default EmailField;\n"],"mappings":"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","ignoreList":[]}