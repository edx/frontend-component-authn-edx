{"version":3,"file":"index.js","names":["React","forwardRef","useState","useIntl","Form","Icon","IconButton","OverlayTrigger","Tooltip","useToggle","Check","Remove","Visibility","VisibilityOff","PropTypes","messages","validatePasswordField","useDispatch","useSelector","LETTER_REGEX","NUMBER_REGEX","clearRegistrationBackendError","fetchRealtimeValidations","PasswordField","props","ref","formatMessage","dispatch","validationApiRateLimited","state","register","errorMessage","name","dataTestId","value","handleChange","handleErrorChange","floatingLabel","handleBlur","showPasswordTooltip","isPasswordHidden","setHiddenTrue","setHiddenFalse","showPasswordRequirements","setShowPasswordRequirements","isFieldFocusOut","setFieldFocusOut","handleOnBlur","e","fieldName","fieldValue","target","relatedTarget","passwordValue","fieldError","password","handleFocus","handleKeyDown","shiftKey","key","HideButton","createElement","src","onFocus","onBlur","iconAs","onClick","size","variant","alt","hidePasswordAlt","ShowButton","showPasswordAlt","placement","tooltip","id","className","test","oneLetter","oneNumber","length","eightCharacters","Group","controlId","overlay","show","Control","as","type","onChange","onKeyDown","autoComplete","trailingElement","Feedback","hasIcon","propTypes","string","isRequired","func","bool"],"sources":["../../../../src/forms/fields/password-field/index.jsx"],"sourcesContent":["import React, { forwardRef, useState } from 'react';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport {\n  Form, Icon, IconButton, OverlayTrigger, Tooltip, useToggle,\n} from '@openedx/paragon';\nimport {\n  Check, Remove, Visibility, VisibilityOff,\n} from '@openedx/paragon/icons';\nimport PropTypes from 'prop-types';\n\nimport messages from './messages';\nimport validatePasswordField from './validator';\nimport { useDispatch, useSelector } from '../../../data/storeHooks';\nimport { LETTER_REGEX, NUMBER_REGEX } from '../../registration-popup/data/constants';\nimport { clearRegistrationBackendError, fetchRealtimeValidations } from '../../registration-popup/data/reducers';\nimport './index.scss';\n\n/**\n * Password field component. It accepts following handler(s)\n * - handleChange for setting value change\n * - handleFocus for clearing the error state\n *\n * It is responsible for\n * - setting value on change\n * - clearing the error state\n */\nconst PasswordField = forwardRef((props, ref) => {\n  const { formatMessage } = useIntl();\n\n  const dispatch = useDispatch();\n\n  const validationApiRateLimited = useSelector(state => state.register?.validationApiRateLimited);\n  const {\n    errorMessage = '',\n    name,\n    dataTestId,\n    value,\n    handleChange,\n    handleErrorChange = null,\n    floatingLabel,\n    handleBlur = () => {},\n    showPasswordTooltip = true,\n  } = props;\n\n  const [isPasswordHidden, setHiddenTrue, setHiddenFalse] = useToggle(true);\n  const [showPasswordRequirements, setShowPasswordRequirements] = useState(false);\n  const [isFieldFocusOut, setFieldFocusOut] = useState(false);\n\n  const handleOnBlur = (e) => {\n    const { name: fieldName, value: fieldValue } = e.target;\n\n    if (isFieldFocusOut) {\n      setShowPasswordRequirements(false);\n      setFieldFocusOut(false);\n    }\n\n    if (fieldName === props.name && e.relatedTarget?.name === 'passwordIcon') {\n      return; // Do not run validations on password icon click\n    }\n\n    let passwordValue = fieldValue;\n    if (fieldName === 'passwordIcon') {\n      // To validate actual password value when onBlur is triggered by focusing out the password icon\n      passwordValue = props.value;\n    }\n\n    if (handleBlur) {\n      handleBlur({\n        target: {\n          name: props.name,\n          value: passwordValue,\n        },\n      });\n    }\n\n    setShowPasswordRequirements(showPasswordTooltip && false);\n    if (handleErrorChange) { // If rendering from register page\n      const fieldError = validatePasswordField(passwordValue, formatMessage);\n      if (fieldError) {\n        handleErrorChange('password', fieldError);\n      } else if (!validationApiRateLimited) {\n        dispatch(fetchRealtimeValidations({ password: passwordValue }));\n      }\n    }\n  };\n\n  const handleFocus = (e) => {\n    if (e.target?.name === 'passwordIcon') {\n      return; // Do not clear error on password icon focus\n    }\n\n    if (props.handleFocus) {\n      props.handleFocus(e);\n    }\n    if (handleErrorChange) {\n      handleErrorChange('password', '');\n      dispatch(clearRegistrationBackendError('password'));\n    }\n    setShowPasswordRequirements(showPasswordTooltip && true);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.shiftKey && e.key === 'Tab') {\n      setFieldFocusOut(true);\n    }\n  };\n\n  const HideButton = (\n    <IconButton\n      name=\"passwordIcon\"\n      src={VisibilityOff}\n      onFocus={handleFocus}\n      onBlur={handleOnBlur}\n      iconAs={Icon}\n      onClick={setHiddenTrue}\n      size=\"sm\"\n      variant=\"secondary\"\n      alt={formatMessage(messages.hidePasswordAlt)}\n    />\n  );\n\n  const ShowButton = (\n    <IconButton\n      name=\"passwordIcon\"\n      src={Visibility}\n      onFocus={handleFocus}\n      onBlur={handleOnBlur}\n      iconAs={Icon}\n      onClick={setHiddenFalse}\n      size=\"sm\"\n      variant=\"secondary\"\n      alt={formatMessage(messages.showPasswordAlt)}\n    />\n  );\n\n  const placement = 'bottom-start';\n  const tooltip = (\n    <Tooltip id={`password-requirement-${placement}`}>\n      <span id=\"letter-check\" className=\"d-flex align-items-center\">\n        {LETTER_REGEX.test(props.value)\n          ? <Icon className=\"text-success mr-1\" src={Check} />\n          : <Icon className=\"mr-1 text-light-700\" src={Remove} />}\n        {formatMessage(messages.oneLetter)}\n      </span>\n      <span id=\"number-check\" className=\"d-flex align-items-center\">\n        {NUMBER_REGEX.test(props.value)\n          ? <Icon className=\"text-success mr-1\" src={Check} />\n          : <Icon className=\"mr-1 text-light-700\" src={Remove} />}\n        {formatMessage(messages.oneNumber)}\n      </span>\n      <span id=\"characters-check\" className=\"d-flex align-items-center\">\n        {props.value.length >= 8\n          ? <Icon className=\"text-success mr-1\" src={Check} />\n          : <Icon className=\"mr-1 text-light-700\" src={Remove} />}\n        {formatMessage(messages.eightCharacters)}\n      </span>\n    </Tooltip>\n  );\n\n  return (\n    <Form.Group key={name} controlId=\"password\" className=\"w-100 mb-4\">\n      <OverlayTrigger key=\"tooltip\" placement={placement} overlay={tooltip} show={showPasswordRequirements}>\n        <Form.Control\n          ref={ref}\n          as=\"input\"\n          data-testid={dataTestId}\n          className=\"mr-0\"\n          type={isPasswordHidden ? 'password' : 'text'}\n          name={name}\n          value={value}\n          onChange={handleChange}\n          onFocus={handleFocus}\n          onBlur={handleOnBlur}\n          onKeyDown={handleKeyDown}\n          autoComplete=\"current-password\"\n          trailingElement={isPasswordHidden ? ShowButton : HideButton}\n          floatingLabel={floatingLabel}\n        />\n      </OverlayTrigger>\n      {errorMessage !== '' && (\n        <Form.Control.Feedback\n          key=\"error\"\n          className=\"form-text-size validation-error-margin\"\n          hasIcon={false}\n          feedback-for={name}\n          type=\"invalid\"\n        >\n          {errorMessage}\n        </Form.Control.Feedback>\n      )}\n    </Form.Group>\n  );\n});\n\nPasswordField.propTypes = {\n  name: PropTypes.string.isRequired,\n  dataTestId: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleBlur: PropTypes.func,\n  handleErrorChange: PropTypes.func,\n  handleFocus: PropTypes.func.isRequired,\n  errorMessage: PropTypes.string,\n  floatingLabel: PropTypes.string.isRequired,\n  showPasswordTooltip: PropTypes.bool,\n};\n\nexport default PasswordField;\n"],"mappings":"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","ignoreList":[]}