{"version":3,"file":"index.js","names":["React","forwardRef","useIntl","Form","PropTypes","messages","TextField","props","ref","formatMessage","errorMessage","label","name","value","handleChange","handleBlur","handleFocus","autoComplete","createElement","Group","controlId","className","Control","as","type","onChange","onFocus","onBlur","floatingLabel","fieldLabel","Feedback","key","hasIcon","propTypes","string","isRequired","func"],"sources":["../../../../src/forms/fields/text-field/index.jsx"],"sourcesContent":["import React, { forwardRef } from 'react';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport { Form } from '@openedx/paragon';\nimport PropTypes from 'prop-types';\n\nimport messages from './messages';\nimport './index.scss';\n/**\n * Text field component. It accepts following handler(s)\n * - handleChange for setting value on change\n * - handleFocus for clearing the error state\n *\n * It is responsible for\n * - setting value on change\n * - clearing error on focus\n */\nconst TextField = forwardRef((props, ref) => {\n  const { formatMessage } = useIntl();\n  const {\n    errorMessage,\n    label,\n    name,\n    value,\n    handleChange,\n    handleBlur = null,\n    handleFocus,\n    autoComplete = '',\n  } = props;\n\n  return (\n    <Form.Group controlId={name} className=\"w-100 mb-4\">\n      <Form.Control\n        as=\"input\"\n        type=\"text\"\n        className=\"mr-0\"\n        name={name}\n        value={value}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        autoComplete={autoComplete}\n        floatingLabel={formatMessage(messages.fieldLabel, { label })}\n        ref={ref}\n      />\n      {errorMessage !== '' && (\n        <Form.Control.Feedback\n          key=\"error\"\n          className=\"form-text-size validation-error-margin\"\n          hasIcon={false}\n          feedback-for={name}\n          type=\"invalid\"\n        >\n          {errorMessage}\n        </Form.Control.Feedback>\n      )}\n    </Form.Group>\n  );\n});\n\nTextField.propTypes = {\n  errorMessage: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleFocus: PropTypes.func.isRequired,\n  handleBlur: PropTypes.func,\n  autoComplete: PropTypes.string,\n};\n\nexport default TextField;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAEzC,SAASC,OAAO,QAAQ,6BAA6B;AACrD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,SAAS,MAAM,YAAY;AAElC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,cAAc;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,SAAS,gBAAGL,UAAU,CAAC,CAACM,KAAK,EAAEC,GAAG,KAAK;EAC3C,MAAM;IAAEC;EAAc,CAAC,GAAGP,OAAO,CAAC,CAAC;EACnC,MAAM;IACJQ,YAAY;IACZC,KAAK;IACLC,IAAI;IACJC,KAAK;IACLC,YAAY;IACZC,UAAU,GAAG,IAAI;IACjBC,WAAW;IACXC,YAAY,GAAG;EACjB,CAAC,GAAGV,KAAK;EAET,oBACEP,KAAA,CAAAkB,aAAA,CAACf,IAAI,CAACgB,KAAK;IAACC,SAAS,EAAER,IAAK;IAACS,SAAS,EAAC;EAAY,gBACjDrB,KAAA,CAAAkB,aAAA,CAACf,IAAI,CAACmB,OAAO;IACXC,EAAE,EAAC,OAAO;IACVC,IAAI,EAAC,MAAM;IACXH,SAAS,EAAC,MAAM;IAChBT,IAAI,EAAEA,IAAK;IACXC,KAAK,EAAEA,KAAM;IACbY,QAAQ,EAAEX,YAAa;IACvBY,OAAO,EAAEV,WAAY;IACrBW,MAAM,EAAEZ,UAAW;IACnBE,YAAY,EAAEA,YAAa;IAC3BW,aAAa,EAAEnB,aAAa,CAACJ,QAAQ,CAACwB,UAAU,EAAE;MAAElB;IAAM,CAAC,CAAE;IAC7DH,GAAG,EAAEA;EAAI,CACV,CAAC,EACDE,YAAY,KAAK,EAAE,iBAClBV,KAAA,CAAAkB,aAAA,CAACf,IAAI,CAACmB,OAAO,CAACQ,QAAQ;IACpBC,GAAG,EAAC,OAAO;IACXV,SAAS,EAAC,wCAAwC;IAClDW,OAAO,EAAE,KAAM;IACf,gBAAcpB,IAAK;IACnBY,IAAI,EAAC;EAAS,GAEbd,YACoB,CAEf,CAAC;AAEjB,CAAC,CAAC;AAEFJ,SAAS,CAAC2B,SAAS,GAAG;EACpBvB,YAAY,EAAEN,SAAS,CAAC8B,MAAM,CAACC,UAAU;EACzCxB,KAAK,EAAEP,SAAS,CAAC8B,MAAM,CAACC,UAAU;EAClCvB,IAAI,EAAER,SAAS,CAAC8B,MAAM,CAACC,UAAU;EACjCtB,KAAK,EAAET,SAAS,CAAC8B,MAAM,CAACC,UAAU;EAClCrB,YAAY,EAAEV,SAAS,CAACgC,IAAI,CAACD,UAAU;EACvCnB,WAAW,EAAEZ,SAAS,CAACgC,IAAI,CAACD,UAAU;EACtCpB,UAAU,EAAEX,SAAS,CAACgC,IAAI;EAC1BnB,YAAY,EAAEb,SAAS,CAAC8B;AAC1B,CAAC;AAED,eAAe5B,SAAS","ignoreList":[]}