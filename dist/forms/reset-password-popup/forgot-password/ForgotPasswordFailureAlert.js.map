{"version":3,"file":"ForgotPasswordFailureAlert.js","names":["React","useIntl","Alert","PropTypes","FORBIDDEN_STATE","INTERNAL_SERVER_ERROR","messages","PASSWORD_RESET","ForgotPasswordFailureAlert","_ref","emailError","status","formatMessage","message","forgotPasswordExtendFieldErrors","forgotPasswordInternalServerError","INVALID_TOKEN","forgotPasswordRequestInProgressMessage","createElement","id","className","variant","propTypes","string"],"sources":["../../../../src/forms/reset-password-popup/forgot-password/ForgotPasswordFailureAlert.jsx"],"sourcesContent":["import React from 'react';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport { Alert } from '@openedx/paragon';\nimport PropTypes from 'prop-types';\n\nimport { FORBIDDEN_STATE, INTERNAL_SERVER_ERROR } from '../../../data/constants';\nimport messages from '../messages';\nimport { PASSWORD_RESET } from '../reset-password/data/constants';\n\n/**\n * Component responsible for showing error alert based on forgot password request status.\n * @param {string} emailError\n * @param {string} status\n */\nconst ForgotPasswordFailureAlert = ({ emailError = '', status = '' }) => {\n  const { formatMessage } = useIntl();\n  let message = '';\n\n  if (emailError) {\n    message = formatMessage(messages.forgotPasswordExtendFieldErrors, { emailError });\n  }\n\n  switch (status) {\n    case INTERNAL_SERVER_ERROR:\n      message = formatMessage(messages.forgotPasswordInternalServerError);\n      break;\n    case PASSWORD_RESET.INVALID_TOKEN:\n      message = formatMessage(messages['invalid.token.error.message']);\n      break;\n    case FORBIDDEN_STATE:\n      message = formatMessage(messages.forgotPasswordRequestInProgressMessage);\n      break;\n    default:\n      break;\n  }\n\n  return message ? (\n    <Alert id=\"forgot-password-failure-alert\" className=\"mb-4\" variant=\"danger\">\n      <p>{message}</p>\n    </Alert>\n  ) : null;\n};\n\nForgotPasswordFailureAlert.propTypes = {\n  emailError: PropTypes.string,\n  status: PropTypes.string,\n};\n\nexport default ForgotPasswordFailureAlert;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,OAAO,QAAQ,6BAA6B;AACrD,SAASC,KAAK,QAAQ,kBAAkB;AACxC,OAAOC,SAAS,MAAM,YAAY;AAElC,SAASC,eAAe,EAAEC,qBAAqB,QAAQ,yBAAyB;AAChF,OAAOC,QAAQ,MAAM,aAAa;AAClC,SAASC,cAAc,QAAQ,kCAAkC;;AAEjE;AACA;AACA;AACA;AACA;AACA,MAAMC,0BAA0B,GAAGC,IAAA,IAAsC;EAAA,IAArC;IAAEC,UAAU,GAAG,EAAE;IAAEC,MAAM,GAAG;EAAG,CAAC,GAAAF,IAAA;EAClE,MAAM;IAAEG;EAAc,CAAC,GAAGX,OAAO,CAAC,CAAC;EACnC,IAAIY,OAAO,GAAG,EAAE;EAEhB,IAAIH,UAAU,EAAE;IACdG,OAAO,GAAGD,aAAa,CAACN,QAAQ,CAACQ,+BAA+B,EAAE;MAAEJ;IAAW,CAAC,CAAC;EACnF;EAEA,QAAQC,MAAM;IACZ,KAAKN,qBAAqB;MACxBQ,OAAO,GAAGD,aAAa,CAACN,QAAQ,CAACS,iCAAiC,CAAC;MACnE;IACF,KAAKR,cAAc,CAACS,aAAa;MAC/BH,OAAO,GAAGD,aAAa,CAACN,QAAQ,CAAC,6BAA6B,CAAC,CAAC;MAChE;IACF,KAAKF,eAAe;MAClBS,OAAO,GAAGD,aAAa,CAACN,QAAQ,CAACW,sCAAsC,CAAC;MACxE;IACF;MACE;EACJ;EAEA,OAAOJ,OAAO,gBACZb,KAAA,CAAAkB,aAAA,CAAChB,KAAK;IAACiB,EAAE,EAAC,+BAA+B;IAACC,SAAS,EAAC,MAAM;IAACC,OAAO,EAAC;EAAQ,gBACzErB,KAAA,CAAAkB,aAAA,YAAIL,OAAW,CACV,CAAC,GACN,IAAI;AACV,CAAC;AAEDL,0BAA0B,CAACc,SAAS,GAAG;EACrCZ,UAAU,EAAEP,SAAS,CAACoB,MAAM;EAC5BZ,MAAM,EAAER,SAAS,CAACoB;AACpB,CAAC;AAED,eAAef,0BAA0B","ignoreList":[]}