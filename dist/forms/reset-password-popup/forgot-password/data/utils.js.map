{"version":3,"file":"utils.js","names":["VALID_EMAIL_REGEX","messages","getValidationMessage","value","formatMessage","emailRegex","RegExp","error","undefined","forgotPasswordEmptyEmailFieldError","test","forgotPasswordPageInvalidEmaiMessage"],"sources":["../../../../../src/forms/reset-password-popup/forgot-password/data/utils.js"],"sourcesContent":["import { VALID_EMAIL_REGEX } from '../../../../data/constants';\nimport messages from '../../messages';\n\n/**\n * Email Validation Function. It checks if the provided email value is either empty or does not match\n * the regular expression for a valid email format. If the value is invalid, it returns\n * a corresponding error message formatted using the provided `formatMessage` function.\n *\n * @param {string} value - The email value to be validated.\n * @param {function} formatMessage - The function to format the error message.\n * @returns {string} - An error message if the email value is invalid, otherwise an empty string.\n */\nconst getValidationMessage = (value, formatMessage) => {\n  const emailRegex = new RegExp(VALID_EMAIL_REGEX, 'i');\n  let error = '';\n  if (value === undefined || value === '') {\n    error = formatMessage(messages.forgotPasswordEmptyEmailFieldError);\n  } else if (!emailRegex.test(value)) {\n    error = formatMessage(messages.forgotPasswordPageInvalidEmaiMessage);\n  }\n  return error;\n};\n\nexport default getValidationMessage;\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,4BAA4B;AAC9D,OAAOC,QAAQ,MAAM,gBAAgB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,oBAAoB,GAAGA,CAACC,KAAK,EAAEC,aAAa,KAAK;EACrD,MAAMC,UAAU,GAAG,IAAIC,MAAM,CAACN,iBAAiB,EAAE,GAAG,CAAC;EACrD,IAAIO,KAAK,GAAG,EAAE;EACd,IAAIJ,KAAK,KAAKK,SAAS,IAAIL,KAAK,KAAK,EAAE,EAAE;IACvCI,KAAK,GAAGH,aAAa,CAACH,QAAQ,CAACQ,kCAAkC,CAAC;EACpE,CAAC,MAAM,IAAI,CAACJ,UAAU,CAACK,IAAI,CAACP,KAAK,CAAC,EAAE;IAClCI,KAAK,GAAGH,aAAa,CAACH,QAAQ,CAACU,oCAAoC,CAAC;EACtE;EACA,OAAOJ,KAAK;AACd,CAAC;AAED,eAAeL,oBAAoB","ignoreList":[]}