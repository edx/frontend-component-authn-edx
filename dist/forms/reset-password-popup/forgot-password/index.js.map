{"version":3,"file":"index.js","names":["React","useEffect","useRef","useState","getConfig","useIntl","Button","Container","Form","StatefulButton","forgotPassword","forgotPasswordClearStatus","getValidationMessage","ForgotPasswordFailureAlert","ForgotPasswordSuccess","setCurrentOpenedForm","InlineLink","COMPLETE_STATE","DEFAULT_STATE","LOGIN_FORM","useDispatch","useSelector","trackForgotPasswordPageEvent","trackForgotPasswordPageViewed","EmailField","NUDGE_PASSWORD_CHANGE","REQUIRE_PASSWORD_CHANGE","loginErrorClear","messages","ResetPasswordHeader","ForgotPasswordForm","formatMessage","dispatch","status","state","loginErrorCode","login","loginError","errorCode","formErrors","setFormErrors","formFields","setFormFields","email","isSuccess","setIsSuccess","emailRef","nudgePasswordChangeRef","requirePasswordChangeRef","handleOnChange","event","name","target","value","type","checked","prevState","_objectSpread","handleErrorChange","fieldName","error","backToLogin","e","preventDefault","current","focus","handleSubmit","createElement","size","className","emailError","tabIndex","ref","vulnerablePasswordBlockedMessage","vulnerablePasswordWarnedMessage","id","handleChange","autoComplete","errorMessage","floatingLabel","forgotPasswordFormEmailFieldLabel","isRegistration","validateEmailFromBackend","variant","labels","default","resetPasswordFormSubmitButton","pending","onClick","onMouseDown","destination","LOGIN_ISSUE_SUPPORT_LINK","linkHelpText","resetPasswordFormNeedHelpText","linkText","resetPasswordFormHelpCenterLink","targetBlank","INFO_EMAIL","resetPasswordFormAdditionalHelpText","resetPasswordBackToLoginButton"],"sources":["../../../../src/forms/reset-password-popup/forgot-password/index.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nimport { getConfig } from '@edx/frontend-platform';\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport {\n  Button, Container, Form, StatefulButton,\n} from '@openedx/paragon';\n\nimport { forgotPassword, forgotPasswordClearStatus } from './data/reducers';\nimport getValidationMessage from './data/utils';\nimport ForgotPasswordFailureAlert from './ForgotPasswordFailureAlert';\nimport ForgotPasswordSuccess from './ForgotPasswordSuccess';\nimport { setCurrentOpenedForm } from '../../../authn-component/data/reducers';\nimport { InlineLink } from '../../../common-ui';\nimport { COMPLETE_STATE, DEFAULT_STATE, LOGIN_FORM } from '../../../data/constants';\nimport { useDispatch, useSelector } from '../../../data/storeHooks';\nimport { trackForgotPasswordPageEvent, trackForgotPasswordPageViewed } from '../../../tracking/trackers/forgotpassword';\nimport EmailField from '../../fields/email-field';\nimport { NUDGE_PASSWORD_CHANGE, REQUIRE_PASSWORD_CHANGE } from '../../login-popup/data/constants';\nimport { loginErrorClear } from '../../login-popup/data/reducers';\nimport messages from '../messages';\nimport ResetPasswordHeader from '../ResetPasswordHeader';\nimport '../index.scss';\n\nconst ForgotPasswordForm = () => {\n  const { formatMessage } = useIntl();\n  const dispatch = useDispatch();\n  const status = useSelector(state => state.forgotPassword?.status);\n  const loginErrorCode = useSelector(state => state.login.loginError?.errorCode);\n\n  const [formErrors, setFormErrors] = useState('');\n  const [formFields, setFormFields] = useState({ email: '' });\n  const [isSuccess, setIsSuccess] = useState(false);\n\n  const emailRef = useRef(null);\n  const nudgePasswordChangeRef = useRef(null);\n  const requirePasswordChangeRef = useRef(null);\n\n  useEffect(() => {\n    trackForgotPasswordPageViewed();\n    trackForgotPasswordPageEvent();\n  }, []);\n\n  const handleOnChange = (event) => {\n    const { name } = event.target;\n    const value = event.target.type === 'checkbox' ? event.target.checked : event.target.value;\n    setFormFields(prevState => ({ ...prevState, [name]: value }));\n  };\n  const handleErrorChange = (fieldName, error) => {\n    setFormErrors(error);\n  };\n\n  const backToLogin = (e) => {\n    e.preventDefault();\n    dispatch(forgotPasswordClearStatus());\n    dispatch(loginErrorClear());\n    dispatch(setCurrentOpenedForm(LOGIN_FORM));\n  };\n\n  useEffect(() => {\n    if (status === COMPLETE_STATE) {\n      setFormErrors('');\n      setIsSuccess(true);\n    }\n  }, [status]);\n\n  useEffect(() => {\n    if (loginErrorCode === NUDGE_PASSWORD_CHANGE && nudgePasswordChangeRef.current) {\n      nudgePasswordChangeRef.current.focus();\n    } else if (loginErrorCode === REQUIRE_PASSWORD_CHANGE && requirePasswordChangeRef.current) {\n      requirePasswordChangeRef.current.focus();\n    } else {\n      emailRef.current.focus();\n    }\n  }, [loginErrorCode]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setFormErrors('');\n\n    const error = getValidationMessage(formFields.email, formatMessage);\n    if (error) {\n      setFormErrors(error);\n    } else {\n      dispatch(forgotPassword(formFields.email));\n    }\n  };\n\n  return (\n    <Container size=\"lg\" className=\"authn__popup-container overflow-auto\">\n      <ResetPasswordHeader />\n      <ForgotPasswordFailureAlert emailError={formErrors} status={status} />\n      {status === DEFAULT_STATE && loginErrorCode === REQUIRE_PASSWORD_CHANGE && (\n        <p\n          aria-live=\"assertive\"\n          tabIndex=\"-1\"\n          ref={requirePasswordChangeRef}\n          data-testid=\"require-password-change-message\"\n        >\n          {formatMessage(messages.vulnerablePasswordBlockedMessage)}\n        </p>\n      )}\n      {status === DEFAULT_STATE && loginErrorCode === NUDGE_PASSWORD_CHANGE && (\n        <p\n          tabIndex=\"-1\"\n          aria-live=\"assertive\"\n          ref={nudgePasswordChangeRef}\n          data-testid=\"nudge-password-change-message\"\n        >\n          {formatMessage(messages.vulnerablePasswordWarnedMessage)}\n        </p>\n      )}\n      {!isSuccess && (\n        <Form id=\"forgot-password-form\" name=\"reset-password-form\" className=\"d-flex flex-column\">\n          <EmailField\n            name=\"email\"\n            value={formFields.email}\n            handleChange={handleOnChange}\n            handleErrorChange={handleErrorChange}\n            autoComplete=\"email\"\n            errorMessage={formErrors}\n            floatingLabel={formatMessage(messages.forgotPasswordFormEmailFieldLabel)}\n            isRegistration={false}\n            validateEmailFromBackend={false}\n            ref={emailRef}\n          />\n          <StatefulButton\n            id=\"reset-password-user\"\n            name=\"reset-password-user\"\n            type=\"submit\"\n            variant=\"primary\"\n            className=\"align-self-end forgot-password-form__submit-btn__width authn-btn__pill-shaped\"\n            state={status}\n            labels={{\n              default: formatMessage(messages.resetPasswordFormSubmitButton),\n              pending: '',\n            }}\n            onClick={handleSubmit}\n            onMouseDown={(e) => e.preventDefault()}\n          />\n\n          <div className=\"my-4\">\n            <InlineLink\n              className=\"mb-2\"\n              destination={getConfig().LOGIN_ISSUE_SUPPORT_LINK}\n              linkHelpText={formatMessage(messages.resetPasswordFormNeedHelpText)}\n              linkText={formatMessage(messages.resetPasswordFormHelpCenterLink)}\n              targetBlank\n            />\n            <InlineLink\n              className=\"font-weight-normal small\"\n              destination={`mailto:${getConfig().INFO_EMAIL}`}\n              linkHelpText={formatMessage(messages.resetPasswordFormAdditionalHelpText)}\n              linkText={getConfig().INFO_EMAIL}\n            />\n          </div>\n        </Form>\n      )}\n      {isSuccess && (\n        <ForgotPasswordSuccess email={formFields.email} />\n      )}\n      <div className=\"text-center mt-4.5\">\n        {loginErrorCode !== REQUIRE_PASSWORD_CHANGE && (\n          <Button\n            id=\"reset-password-back-to-login\"\n            name=\"reset-password-back-to-login\"\n            variant=\"tertiary\"\n            type=\"submit\"\n            className=\"align-self-center back-to-login__button authn-btn__pill-shaped\"\n            onClick={backToLogin}\n            onMouseDown={(e) => e.preventDefault()}\n          >\n            {formatMessage(messages.resetPasswordBackToLoginButton)}\n          </Button>\n        )}\n      </div>\n    </Container>\n  );\n};\n\nexport default ForgotPasswordForm;\n"],"mappings":"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","ignoreList":[]}