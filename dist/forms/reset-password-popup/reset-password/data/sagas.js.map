{"version":3,"file":"sagas.js","names":["logError","logInfo","call","put","takeEvery","PASSWORD_RESET","PASSWORD_VALIDATION_ERROR","resetPassword","resetPasswordFailure","resetPasswordSuccess","validatePassword","validatePasswordFailure","validatePasswordSuccess","validateToken","validateTokenFailed","validateTokenSuccess","resetPasswordRequest","validatePasswordRequest","validateTokenRequest","setShowPasswordResetBanner","forgotPassweordTokenInvalidFailure","handleValidateToken","action","data","payload","isValid","is_valid","INVALID_TOKEN","err","response","status","FORBIDDEN_REQUEST","INTERNAL_SERVER_ERROR","handleValidatePassword","handleResetPassword","formPayload","token","params","resetStatus","reset_status","resetErrors","err_msg","token_invalid","errorMsg","saga","type"],"sources":["../../../../../src/forms/reset-password-popup/reset-password/data/sagas.js"],"sourcesContent":["import { logError, logInfo } from '@edx/frontend-platform/logging';\nimport { call, put, takeEvery } from 'redux-saga/effects';\n\nimport { PASSWORD_RESET, PASSWORD_VALIDATION_ERROR } from './constants';\nimport {\n  resetPassword,\n  resetPasswordFailure,\n  resetPasswordSuccess,\n  validatePassword,\n  validatePasswordFailure,\n  validatePasswordSuccess,\n  validateToken,\n  validateTokenFailed,\n  validateTokenSuccess,\n} from './reducers';\nimport { resetPasswordRequest, validatePasswordRequest, validateTokenRequest } from './service';\nimport { setShowPasswordResetBanner } from '../../../login-popup/data/reducers';\nimport { forgotPassweordTokenInvalidFailure } from '../../forgot-password/data/reducers';\n\n// Services\nexport function* handleValidateToken(action) {\n  try {\n    const data = yield call(validateTokenRequest, action.payload);\n    const isValid = data.is_valid;\n\n    if (isValid) {\n      yield put(validateTokenSuccess(isValid, action.payload));\n    } else {\n      yield put(validateTokenFailed(PASSWORD_RESET.INVALID_TOKEN));\n      yield put(forgotPassweordTokenInvalidFailure(PASSWORD_RESET.INVALID_TOKEN));\n    }\n  } catch (err) {\n    if (err.response && err.response.status === 429) {\n      yield put(validateTokenFailed(PASSWORD_RESET.FORBIDDEN_REQUEST));\n      yield put(forgotPassweordTokenInvalidFailure(PASSWORD_RESET.FORBIDDEN_REQUEST));\n      logInfo(err);\n    } else {\n      yield put(validateTokenFailed(PASSWORD_RESET.INTERNAL_SERVER_ERROR));\n      yield put(forgotPassweordTokenInvalidFailure(PASSWORD_RESET.INTERNAL_SERVER_ERROR));\n      logError(err);\n    }\n  }\n}\n\nexport function* handleValidatePassword(action) {\n  try {\n    const data = yield call(validatePasswordRequest, action.payload);\n    yield put(validatePasswordSuccess(data));\n  } catch (err) {\n    yield put(validatePasswordFailure());\n    logError(err);\n  }\n}\n\nexport function* handleResetPassword(action) {\n  try {\n    const data = yield call(\n      resetPasswordRequest,\n      action.payload.formPayload,\n      action.payload.token,\n      action.payload.params,\n    );\n    const resetStatus = data.reset_status;\n    const resetErrors = data.err_msg;\n\n    if (resetStatus) {\n      yield put(resetPasswordSuccess(resetStatus));\n      yield put(setShowPasswordResetBanner());\n    } else if (data.token_invalid) {\n      yield put(resetPasswordFailure({\n        status: PASSWORD_RESET.INVALID_TOKEN,\n      }));\n      yield put(forgotPassweordTokenInvalidFailure(PASSWORD_RESET.INVALID_TOKEN));\n    } else {\n      yield put(resetPasswordFailure({\n        status: PASSWORD_VALIDATION_ERROR,\n        errorMsg: resetErrors,\n      }));\n    }\n  } catch (err) {\n    if (err.response && err.response.status === 429) {\n      yield put(resetPasswordFailure({\n        status: PASSWORD_RESET.FORBIDDEN_REQUEST,\n      }));\n      logInfo(err);\n    } else {\n      yield put(resetPasswordFailure({\n        status: PASSWORD_RESET.INTERNAL_SERVER_ERROR,\n      }));\n      logError(err);\n    }\n  }\n}\n\nexport default function* saga() {\n  yield takeEvery(resetPassword.type, handleResetPassword);\n  yield takeEvery(validateToken.type, handleValidateToken);\n  yield takeEvery(validatePassword.type, handleValidatePassword);\n}\n"],"mappings":"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","ignoreList":[]}