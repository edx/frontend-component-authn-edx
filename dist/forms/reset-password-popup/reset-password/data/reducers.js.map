{"version":3,"file":"reducers.js","names":["createSlice","PASSWORD_RESET_ERROR","SUCCESS","TOKEN_STATE","COMPLETE_STATE","DEFAULT_STATE","FAILURE_STATE","PENDING_STATE","storeName","REGISTER_SLICE_NAME","resetPasswordInitialState","tokenValidationState","resetPasswordsubmitState","status","PENDING","token","errorMsg","tokenError","backendValidationError","resetPasswordSlice","name","initialState","reducers","validateToken","state","validateTokenSuccess","_ref","payload","VALID","validateTokenFailed","_ref2","resetPassword","resetPasswordSuccess","resetPasswordFailure","_ref3","validatePassword","validatePasswordSuccess","_ref4","validatePasswordFailure","actions","reducer"],"sources":["../../../../../src/forms/reset-password-popup/reset-password/data/reducers.js"],"sourcesContent":["/**\n * Redux slice for managing registration state.\n * This slice handles the registration process, including the submission state,\n * registration result, and any registration errors.\n */\n\nimport { createSlice } from '@reduxjs/toolkit';\n\nimport { PASSWORD_RESET_ERROR, SUCCESS, TOKEN_STATE } from './constants';\nimport {\n  COMPLETE_STATE, DEFAULT_STATE, FAILURE_STATE, PENDING_STATE,\n} from '../../../../data/constants';\n\nexport const storeName = 'resetPassword';\nexport const REGISTER_SLICE_NAME = 'resetPassword';\n\nexport const resetPasswordInitialState = {\n  tokenValidationState: DEFAULT_STATE,\n  resetPasswordsubmitState: DEFAULT_STATE,\n  status: TOKEN_STATE.PENDING,\n  token: null,\n  errorMsg: null,\n  tokenError: null,\n  backendValidationError: null,\n};\n\nexport const resetPasswordSlice = createSlice({\n  name: REGISTER_SLICE_NAME,\n  initialState: resetPasswordInitialState,\n  reducers: {\n    validateToken: (state) => {\n      state.tokenValidationState = PENDING_STATE;\n      state.status = PENDING_STATE;\n    },\n    validateTokenSuccess: (state, { payload }) => {\n      state.tokenValidationState = COMPLETE_STATE;\n      state.status = TOKEN_STATE.VALID;\n      state.token = payload;\n    },\n    validateTokenFailed: (state, { payload }) => {\n      state.status = PASSWORD_RESET_ERROR;\n      state.tokenValidationState = DEFAULT_STATE;\n      state.tokenError = payload;\n    },\n    resetPassword: (state) => {\n      state.status = PENDING_STATE;\n      state.resetPasswordsubmitState = PENDING_STATE;\n    },\n    resetPasswordSuccess: (state) => {\n      state.status = SUCCESS;\n      state.resetPasswordsubmitState = COMPLETE_STATE;\n    },\n    resetPasswordFailure: (state, { payload }) => {\n      state.status = payload.status;\n      state.resetPasswordsubmitState = FAILURE_STATE;\n      state.errorMsg = payload.errorMsg;\n    },\n    validatePassword: (state) => {\n      state.backendValidationError = null;\n    },\n    validatePasswordSuccess: (state, { payload }) => {\n      state.backendValidationError = payload;\n    },\n    validatePasswordFailure: (state) => {\n      state.backendValidationError = null;\n    },\n  },\n});\n\nexport const {\n  validateToken,\n  validatePassword,\n  validateTokenSuccess,\n  validateTokenFailed,\n  resetPassword,\n  resetPasswordSuccess,\n  resetPasswordFailure,\n  validatePasswordSuccess,\n  validatePasswordFailure,\n} = resetPasswordSlice.actions;\n\nexport default resetPasswordSlice.reducer;\n"],"mappings":"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","ignoreList":[]}