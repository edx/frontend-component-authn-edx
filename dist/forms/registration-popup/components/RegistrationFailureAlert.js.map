{"version":3,"file":"RegistrationFailureAlert.js","names":["React","useIntl","Alert","PropTypes","FORBIDDEN_REQUEST","FORM_SUBMISSION_ERROR","INTERNAL_SERVER_ERROR","TPA_AUTHENTICATION_FAILURE","TPA_SESSION_EXPIRED","messages","RegistrationFailureMessage","_ref","context","errorMessage","errorCode","formatMessage","registrationRequestServerError","registrationRateLimitError","registrationTPASessionExpired","provider","registrationFormSubmissionError","registrationEmptyFormSubmissionError","createElement","id","className","variant","propTypes","shape","string","isRequired"],"sources":["../../../../src/forms/registration-popup/components/RegistrationFailureAlert.jsx"],"sourcesContent":["import React from 'react';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport { Alert } from '@openedx/paragon';\nimport PropTypes from 'prop-types';\n\nimport {\n  FORBIDDEN_REQUEST,\n  FORM_SUBMISSION_ERROR,\n  INTERNAL_SERVER_ERROR,\n  TPA_AUTHENTICATION_FAILURE,\n  TPA_SESSION_EXPIRED,\n} from '../../../data/constants';\nimport messages from '../messages';\n\n/**\n * RegisterFailureAlert component that is responsible to show error alert based on error code.\n * It accepts the following props\n * @param context\n * @param errorCode\n */\n\nconst RegistrationFailureMessage = ({\n  context = {\n    errorMessage: null,\n  }, errorCode,\n}) => {\n  const { formatMessage } = useIntl();\n\n  if (!errorCode || errorCode === TPA_AUTHENTICATION_FAILURE) {\n    return null;\n  }\n\n  let errorMessage;\n  switch (errorCode) {\n    case INTERNAL_SERVER_ERROR:\n      errorMessage = formatMessage(messages.registrationRequestServerError);\n     break;\n    case FORBIDDEN_REQUEST:\n      errorMessage = formatMessage(messages.registrationRateLimitError);\n      break;\n    case TPA_SESSION_EXPIRED:\n      errorMessage = formatMessage(messages.registrationTPASessionExpired, { provider: context.provider });\n      break;\n    case FORM_SUBMISSION_ERROR:\n      errorMessage = formatMessage(messages.registrationFormSubmissionError);\n      break;\n    default:\n      errorMessage = formatMessage(messages.registrationEmptyFormSubmissionError);\n      break;\n  }\n\n  return (\n    <Alert id=\"registration-failure-alert\" className=\"mb-5\" variant=\"danger\">\n      <p>{errorMessage}</p>\n    </Alert>\n  );\n};\n\nRegistrationFailureMessage.propTypes = {\n  context: PropTypes.shape({\n    provider: PropTypes.string,\n    errorMessage: PropTypes.string,\n  }),\n  errorCode: PropTypes.string.isRequired,\n};\n\nexport default RegistrationFailureMessage;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,OAAO,QAAQ,6BAA6B;AACrD,SAASC,KAAK,QAAQ,kBAAkB;AACxC,OAAOC,SAAS,MAAM,YAAY;AAElC,SACEC,iBAAiB,EACjBC,qBAAqB,EACrBC,qBAAqB,EACrBC,0BAA0B,EAC1BC,mBAAmB,QACd,yBAAyB;AAChC,OAAOC,QAAQ,MAAM,aAAa;;AAElC;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,0BAA0B,GAAGC,IAAA,IAI7B;EAAA,IAJ8B;IAClCC,OAAO,GAAG;MACRC,YAAY,EAAE;IAChB,CAAC;IAAEC;EACL,CAAC,GAAAH,IAAA;EACC,MAAM;IAAEI;EAAc,CAAC,GAAGd,OAAO,CAAC,CAAC;EAEnC,IAAI,CAACa,SAAS,IAAIA,SAAS,KAAKP,0BAA0B,EAAE;IAC1D,OAAO,IAAI;EACb;EAEA,IAAIM,YAAY;EAChB,QAAQC,SAAS;IACf,KAAKR,qBAAqB;MACxBO,YAAY,GAAGE,aAAa,CAACN,QAAQ,CAACO,8BAA8B,CAAC;MACtE;IACD,KAAKZ,iBAAiB;MACpBS,YAAY,GAAGE,aAAa,CAACN,QAAQ,CAACQ,0BAA0B,CAAC;MACjE;IACF,KAAKT,mBAAmB;MACtBK,YAAY,GAAGE,aAAa,CAACN,QAAQ,CAACS,6BAA6B,EAAE;QAAEC,QAAQ,EAAEP,OAAO,CAACO;MAAS,CAAC,CAAC;MACpG;IACF,KAAKd,qBAAqB;MACxBQ,YAAY,GAAGE,aAAa,CAACN,QAAQ,CAACW,+BAA+B,CAAC;MACtE;IACF;MACEP,YAAY,GAAGE,aAAa,CAACN,QAAQ,CAACY,oCAAoC,CAAC;MAC3E;EACJ;EAEA,oBACErB,KAAA,CAAAsB,aAAA,CAACpB,KAAK;IAACqB,EAAE,EAAC,4BAA4B;IAACC,SAAS,EAAC,MAAM;IAACC,OAAO,EAAC;EAAQ,gBACtEzB,KAAA,CAAAsB,aAAA,YAAIT,YAAgB,CACf,CAAC;AAEZ,CAAC;AAEDH,0BAA0B,CAACgB,SAAS,GAAG;EACrCd,OAAO,EAAET,SAAS,CAACwB,KAAK,CAAC;IACvBR,QAAQ,EAAEhB,SAAS,CAACyB,MAAM;IAC1Bf,YAAY,EAAEV,SAAS,CAACyB;EAC1B,CAAC,CAAC;EACFd,SAAS,EAAEX,SAAS,CAACyB,MAAM,CAACC;AAC9B,CAAC;AAED,eAAenB,0BAA0B","ignoreList":[]}