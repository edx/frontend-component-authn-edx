{"version":3,"file":"index.js","names":["React","useEffect","useMemo","useRef","useState","getConfig","snakeCaseObject","useIntl","Container","Form","Spinner","StatefulButton","HonorCodeAndPrivacyPolicyMessage","RegistrationFailureAlert","clearAllRegistrationErrors","clearRegistrationBackendError","registerUser","setRegistrationFields","getBackendValidations","isFormValid","messages","setCurrentOpenedForm","InlineLink","SocialAuthProviders","COMPLETE_STATE","ENTERPRISE_LOGIN_URL","FAILURE_STATE","FORM_SUBMISSION_ERROR","LOGIN_FORM","REGISTRATION_FORM","TPA_AUTHENTICATION_FAILURE","useDispatch","useSelector","getAllPossibleQueryParams","getCountryCookieValue","moveScrollToTop","setCookie","trackLoginFormToggled","trackRegistrationPageViewed","trackRegistrationSuccess","AuthenticatedRedirection","SSOFailureAlert","ThirdPartyAuthAlert","EmailField","MarketingEmailOptInCheckbox","NameField","PasswordField","useSubjectsList","setSubjectsList","RegistrationForm","formatMessage","dispatch","formStartTime","setFormStartTime","formFields","setFormFields","name","email","password","marketingEmailsOptIn","errors","setErrors","errorCode","setErrorCode","type","count","userPipelineDataLoaded","setUserPipelineDataLoaded","emailRef","registerErrorAlertRef","socialAuthnButtonRef","registerFormHeadingRef","queryParams","subjectsList","subjectsLoading","registrationResult","state","register","onboardingComponentContext","commonData","thirdPartyAuthApiStatus","thirdPartyAuthErrorMessage","thirdPartyAuthContext","errorMessage","finishAuthUrl","providers","currentProvider","pipelineUserDetails","authContextCountryCode","countryCode","registrationError","isLoginSSOIntent","login","registrationErrorCode","backendValidations","submitState","autoSubmitRegForm","authMode","localStorage","getItem","prevState","removeItem","Object","keys","length","_objectSpread","current","focus","handleOnChange","event","target","value","checked","prevErrors","success","USER_RETENTION_COOKIE_NAME","Date","now","handleErrorChange","fieldName","error","handleUserRegistration","totalRegistrationTime","userCountryCode","payload","honor_code","terms_of_service","app_name","social_auth_provider","country","isValid","fieldErrors","handleSubmit","e","preventDefault","createElement","className","size","redirectUrl","redirectToProgressiveProfilingForm","ref","registrationFormHeading1","context","animation","variant","id","Fragment","isLoginForm","registrationFormHeading2","referrer","tabIndex","failureCount","provider","handleChange","floatingLabel","registrationFormEmailFieldLabel","label","handleFocus","registrationFormPasswordFieldLabel","labels","default","registrationFormCreateAccountButton","pending","onClick","onMouseDown","linkHelpText","registrationFormAlreadyHaveAccountText","linkText","registrationFormSignInLink","destination","LMS_BASE_URL","registrationFormSchoolOrOrganizationLink","registrationFormSignInWithCredentialsLink"],"sources":["../../../src/forms/registration-popup/index.jsx"],"sourcesContent":["import React, {\n  useEffect, useMemo, useRef, useState,\n} from 'react';\n\nimport { getConfig, snakeCaseObject } from '@edx/frontend-platform';\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport {\n  Container, Form, Spinner, StatefulButton,\n} from '@openedx/paragon';\n\nimport HonorCodeAndPrivacyPolicyMessage from './components/honorCodeAndTOS';\nimport RegistrationFailureAlert from './components/RegistrationFailureAlert';\nimport {\n  clearAllRegistrationErrors,\n  clearRegistrationBackendError,\n  registerUser,\n  setRegistrationFields,\n} from './data/reducers';\nimport getBackendValidations from './data/selector';\nimport isFormValid from './data/utils';\nimport messages from './messages';\nimport { setCurrentOpenedForm } from '../../authn-component/data/reducers';\nimport { InlineLink, SocialAuthProviders } from '../../common-ui';\nimport {\n  COMPLETE_STATE,\n  ENTERPRISE_LOGIN_URL,\n  FAILURE_STATE,\n  FORM_SUBMISSION_ERROR,\n  LOGIN_FORM,\n  REGISTRATION_FORM,\n  TPA_AUTHENTICATION_FAILURE,\n} from '../../data/constants';\nimport { useDispatch, useSelector } from '../../data/storeHooks';\nimport getAllPossibleQueryParams, { getCountryCookieValue, moveScrollToTop, setCookie } from '../../data/utils';\nimport './index.scss';\nimport {\n  trackLoginFormToggled,\n  trackRegistrationPageViewed,\n  trackRegistrationSuccess,\n} from '../../tracking/trackers/register';\nimport AuthenticatedRedirection from '../common-components/AuthenticatedRedirection';\nimport SSOFailureAlert from '../common-components/SSOFailureAlert';\nimport ThirdPartyAuthAlert from '../common-components/ThirdPartyAuthAlert';\nimport {\n  EmailField,\n  MarketingEmailOptInCheckbox,\n  NameField,\n  PasswordField,\n} from '../fields';\nimport useSubjectsList from '../progressive-profiling-popup/data/hooks/useSubjectList';\nimport { setSubjectsList } from '../progressive-profiling-popup/data/reducers';\n\n/**\n * RegisterForm component for handling user registration.\n * This component provides a form for users to register with their name, email, password,\n * and a checkbox for opting out of marketing emails.\n */\nconst RegistrationForm = () => {\n  const { formatMessage } = useIntl();\n  const dispatch = useDispatch();\n  const [formStartTime, setFormStartTime] = useState(null);\n\n  const [formFields, setFormFields] = useState({\n    name: '', email: '', password: '', marketingEmailsOptIn: true,\n  });\n  const [errors, setErrors] = useState({});\n  const [errorCode, setErrorCode] = useState({ type: '', count: 0 });\n  const [userPipelineDataLoaded, setUserPipelineDataLoaded] = useState(false);\n\n  const emailRef = useRef(null);\n  const registerErrorAlertRef = useRef(null);\n  const socialAuthnButtonRef = useRef(null);\n  const registerFormHeadingRef = useRef(null);\n  const queryParams = useMemo(() => getAllPossibleQueryParams(), []);\n  const { subjectsList, subjectsLoading } = useSubjectsList();\n\n  const registrationResult = useSelector(state => state.register.registrationResult);\n\n  const onboardingComponentContext = useSelector(state => state.commonData.onboardingComponentContext);\n  const thirdPartyAuthApiStatus = useSelector(state => state.commonData.thirdPartyAuthApiStatus);\n  const thirdPartyAuthErrorMessage = useSelector(state => state.commonData.thirdPartyAuthContext.errorMessage);\n  const finishAuthUrl = useSelector(state => state.commonData.thirdPartyAuthContext.finishAuthUrl);\n  const providers = useSelector(state => state.commonData.thirdPartyAuthContext?.providers);\n  const currentProvider = useSelector(state => state.commonData.thirdPartyAuthContext.currentProvider);\n  const pipelineUserDetails = useSelector(state => state.commonData.thirdPartyAuthContext.pipelineUserDetails);\n  const authContextCountryCode = useSelector(state => state.commonData.thirdPartyAuthContext.countryCode);\n  const registrationError = useSelector(state => state.register.registrationError);\n  const isLoginSSOIntent = useSelector(state => state.login.isLoginSSOIntent);\n  const registrationErrorCode = registrationError?.errorCode;\n  const backendValidations = useSelector(getBackendValidations);\n  const submitState = useSelector(state => state.register.submitState);\n\n  const autoSubmitRegForm = (currentProvider\n      && thirdPartyAuthApiStatus === COMPLETE_STATE\n      && !isLoginSSOIntent\n      && queryParams?.authMode === 'Register'\n      && !localStorage.getItem('ssoPipelineRedirectionDone')\n  );\n\n  /**\n   * Set the userPipelineDetails data in formFields for only first time\n   */\n  useEffect(() => {\n    if (!userPipelineDataLoaded && thirdPartyAuthApiStatus === COMPLETE_STATE) {\n      if (thirdPartyAuthErrorMessage) {\n        setErrorCode(prevState => ({ type: TPA_AUTHENTICATION_FAILURE, count: prevState.count + 1 }));\n        localStorage.removeItem('marketingEmailsOptIn');\n        localStorage.removeItem('ssoPipelineRedirectionDone');\n      }\n      if (pipelineUserDetails && Object.keys(pipelineUserDetails).length !== 0) {\n        const {\n          name = '', email = '',\n        } = pipelineUserDetails;\n        setFormFields(prevState => ({\n          ...prevState, name, email,\n        }));\n        setUserPipelineDataLoaded(true);\n      }\n    }\n  }, [ // eslint-disable-line react-hooks/exhaustive-deps\n    thirdPartyAuthApiStatus,\n    thirdPartyAuthErrorMessage,\n    pipelineUserDetails,\n    userPipelineDataLoaded,\n  ]);\n\n  useEffect(() => {\n    if (thirdPartyAuthApiStatus === COMPLETE_STATE) {\n      if (providers.length > 0 && socialAuthnButtonRef.current) {\n        socialAuthnButtonRef.current.focus();\n      } else if (emailRef.current) {\n        emailRef.current.focus();\n      }\n    } else if (thirdPartyAuthApiStatus === FAILURE_STATE) {\n      emailRef.current.focus();\n    }\n  }, [thirdPartyAuthApiStatus, providers]);\n\n  useEffect(() => {\n    moveScrollToTop(registerFormHeadingRef, 'end');\n  }, []);\n\n  useEffect(() => {\n    if (!subjectsLoading) {\n      dispatch(setSubjectsList(subjectsList));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, subjectsLoading]);\n\n  const handleOnChange = (event) => {\n    const { name } = event.target;\n    const value = event.target.type === 'checkbox' ? event.target.checked : event.target.value;\n\n    if (registrationError[name]) {\n      dispatch(clearRegistrationBackendError(name));\n    }\n    // seting marketingEmailsOptIn state for SSO authentication flow for register API call\n    if (name === 'marketingEmailsOptIn') {\n      dispatch(setRegistrationFields({ [name]: value }));\n    }\n    setErrors(prevErrors => ({ ...prevErrors, [name]: '' }));\n    setFormFields(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  useEffect(() => {\n    if (thirdPartyAuthApiStatus === COMPLETE_STATE\n      && currentProvider === null\n      && localStorage.getItem('ssoPipelineRedirectionDone')\n    ) {\n      localStorage.removeItem('ssoPipelineRedirectionDone');\n      localStorage.removeItem('marketingEmailsOptIn');\n    }\n  }, [currentProvider, thirdPartyAuthApiStatus]);\n\n  useEffect(() => {\n    if (registrationResult.success) {\n      // clear local storage\n      localStorage.removeItem('marketingEmailsOptIn');\n      localStorage.removeItem('ssoPipelineRedirectionDone');\n\n      // This event is used by GTM\n      trackRegistrationSuccess();\n\n      // This is used by the \"User Retention Rate Event\" on GTM\n      setCookie(getConfig().USER_RETENTION_COOKIE_NAME, true);\n    }\n  }, [registrationResult]);\n\n  useEffect(() => {\n    if (!formStartTime) {\n      trackRegistrationPageViewed();\n      setFormStartTime(Date.now());\n    }\n  }, [formStartTime]);\n\n  useEffect(() => {\n    if (backendValidations) {\n      setErrors(prevErrors => ({ ...prevErrors, ...backendValidations }));\n    }\n  }, [backendValidations]);\n\n  useEffect(() => {\n    if (registrationErrorCode) {\n      setErrorCode(prevState => ({ type: registrationErrorCode, count: prevState.count + 1 }));\n      moveScrollToTop(registerErrorAlertRef);\n      if (registerErrorAlertRef.current) {\n        registerErrorAlertRef.current.focus();\n      }\n    }\n  }, [registrationErrorCode]);\n\n  const handleErrorChange = (fieldName, error) => {\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      [fieldName]: error,\n    }));\n  };\n\n  const handleUserRegistration = () => {\n    const totalRegistrationTime = (Date.now() - formStartTime) / 1000;\n    const userCountryCode = getCountryCookieValue();\n    let payload = {\n      ...formFields, honor_code: true, terms_of_service: true, app_name: 'onboarding_component',\n    };\n\n    if (currentProvider) {\n      delete payload.password;\n      payload.social_auth_provider = currentProvider;\n\n      if (!isLoginSSOIntent) {\n        delete payload.marketingEmailsOptIn;\n        payload.marketingEmailsOptIn = localStorage.getItem('marketingEmailsOptIn');\n      }\n    }\n\n    // add country in payload if country cookie value or mfe_context country exists\n    if (userCountryCode) {\n      payload.country = userCountryCode;\n    } else if (authContextCountryCode) {\n      payload.country = authContextCountryCode;\n    }\n\n    // Validating form data before submitting\n    const { isValid, fieldErrors } = isFormValid(\n      payload,\n      errors,\n      formatMessage,\n    );\n    setErrors({ ...fieldErrors });\n\n    if (!isValid) {\n      setErrorCode(prevState => ({ type: FORM_SUBMISSION_ERROR, count: prevState.count + 1 }));\n      moveScrollToTop(registerErrorAlertRef);\n      return;\n    }\n\n    payload = {\n      ...onboardingComponentContext, ...queryParams, ...payload,\n    };\n    payload = snakeCaseObject(payload);\n    payload.totalRegistrationTime = totalRegistrationTime;\n    dispatch(registerUser(payload));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handleUserRegistration();\n  };\n\n  useEffect(() => {\n    if (autoSubmitRegForm && userPipelineDataLoaded) {\n      handleUserRegistration();\n    }\n  }, [autoSubmitRegForm, userPipelineDataLoaded]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div className=\"flex-column\">\n      <Container size=\"lg\" className=\"authn__popup-container\">\n        <AuthenticatedRedirection\n          success={registrationResult.success}\n          redirectUrl={registrationResult.redirectUrl}\n          finishAuthUrl={finishAuthUrl}\n          redirectToProgressiveProfilingForm\n        />\n        <h2\n          className=\"font-italic text-center display-1 mb-0\"\n          data-testid=\"sign-up-heading\"\n          ref={registerFormHeadingRef}\n        >\n          {formatMessage(messages.registrationFormHeading1)}\n        </h2>\n        <hr className=\"separator my-3 my-sm-4\" />\n\n        <SSOFailureAlert\n          errorCode={errorCode.type}\n          context={{ errorMessage: thirdPartyAuthErrorMessage }}\n        />\n\n        {(autoSubmitRegForm && !errorCode.type) ? (\n          <div className=\"my-6 text-center\">\n            <Spinner animation=\"border\" variant=\"primary\" id=\"tpa-spinner\" />\n          </div>\n        ) : (\n          <>\n            {(!autoSubmitRegForm || errorCode.type) && (!currentProvider) && (\n              <>\n                <SocialAuthProviders isLoginForm={false} ref={socialAuthnButtonRef} />\n                <div className=\"text-center mb-4 mt-3\">\n                  {formatMessage(messages.registrationFormHeading2)}\n                </div>\n              </>\n            )}\n\n            <ThirdPartyAuthAlert\n              currentProvider={currentProvider}\n              referrer={REGISTRATION_FORM}\n            />\n            <div ref={registerErrorAlertRef} tabIndex=\"-1\" aria-live=\"assertive\">\n              <RegistrationFailureAlert\n                errorCode={errorCode.type}\n                failureCount={errorCode.count}\n                context={{ provider: currentProvider, errorMessage: thirdPartyAuthErrorMessage }}\n              />\n            </div>\n            <Form id=\"registration-form\" name=\"registration-form\" className=\"d-flex flex-column my-4\">\n              <EmailField\n                name=\"email\"\n                value={formFields.email}\n                errorMessage={errors.email}\n                handleChange={handleOnChange}\n                handleErrorChange={handleErrorChange}\n                floatingLabel={formatMessage(messages.registrationFormEmailFieldLabel)}\n                ref={emailRef}\n              />\n              <NameField\n                label=\"Full name\"\n                name=\"name\"\n                value={formFields.name}\n                errorMessage={errors.name}\n                handleChange={handleOnChange}\n                handleErrorChange={handleErrorChange}\n                handleFocus={() => { }}\n              />\n              {!currentProvider && (\n                <PasswordField\n                  name=\"password\"\n                  value={formFields.password}\n                  errorMessage={errors.password}\n                  handleChange={handleOnChange}\n                  handleErrorChange={handleErrorChange}\n                  handleFocus={() => { }}\n                  floatingLabel={formatMessage(messages.registrationFormPasswordFieldLabel)}\n                />\n              )}\n              <MarketingEmailOptInCheckbox\n                name=\"marketingEmailsOptIn\"\n                value={formFields.marketingEmailsOptIn}\n                handleChange={handleOnChange}\n              />\n              <div className=\"d-flex flex-column my-4\">\n                <StatefulButton\n                  id=\"register-user\"\n                  name=\"register-user\"\n                  type=\"submit\"\n                  variant=\"primary\"\n                  className=\"align-self-end registration-form__submit-btn__width authn-btn__pill-shaped\"\n                  state={submitState}\n                  labels={{\n                    default: formatMessage(messages.registrationFormCreateAccountButton),\n                    pending: '',\n                  }}\n                  onClick={handleSubmit}\n                  onMouseDown={(e) => e.preventDefault()}\n                />\n\n              </div>\n            </Form>\n            <div>\n              <InlineLink\n                className=\"mb-2\"\n                onClick={() => {\n                  trackLoginFormToggled();\n                  dispatch(clearAllRegistrationErrors());\n                  dispatch(setCurrentOpenedForm(LOGIN_FORM));\n                }}\n                linkHelpText={formatMessage(messages.registrationFormAlreadyHaveAccountText)}\n                linkText={formatMessage(messages.registrationFormSignInLink)}\n              />\n              <InlineLink\n                destination={getConfig().LMS_BASE_URL + ENTERPRISE_LOGIN_URL}\n                linkHelpText={formatMessage(messages.registrationFormSchoolOrOrganizationLink)}\n                linkText={formatMessage(messages.registrationFormSignInWithCredentialsLink)}\n              />\n            </div>\n          </>\n        )}\n      </Container>\n      {!(autoSubmitRegForm && !errorCode.type) && (\n        <div className=\"bg-dark-500\">\n          <p className=\"mb-0 text-white m-auto authn-popup__registration-footer\">\n            <HonorCodeAndPrivacyPolicyMessage />\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RegistrationForm;\n"],"mappings":"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","ignoreList":[]}