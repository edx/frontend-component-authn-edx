{"version":3,"file":"selector.js","names":["createSelector","getRegistrationError","state","register","registrationError","getValidations","validations","getBackendValidations","validationDecisions","Object","keys","length","fields","filter","fieldName","forEach","field","userMessage"],"sources":["../../../../src/forms/registration-popup/data/selector.js"],"sourcesContent":["import { createSelector } from 'reselect';\n\n/**\n * Selector for backend validations which processes the api output and generates a\n * key value dict for field errors.\n * @returns {{username: string}|{name: string}|*|{}|null}\n */\nconst getRegistrationError = state => state.register.registrationError;\nconst getValidations = state => state.register.validations;\n\nconst getBackendValidations = createSelector(\n  [getRegistrationError, getValidations],\n  (registrationError, validations) => {\n    if (validations) {\n      return validations.validationDecisions;\n    }\n\n    if (Object.keys(registrationError).length > 0) {\n      const fields = Object.keys(registrationError).filter(\n        (fieldName) => !(fieldName in ['errorCode']),\n      );\n\n      const validationDecisions = {};\n      fields.forEach(field => {\n        validationDecisions[field] = registrationError[field][0].userMessage || '';\n      });\n      return validationDecisions;\n    }\n\n    return null;\n  },\n);\n\nexport default getBackendValidations;\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,UAAU;;AAEzC;AACA;AACA;AACA;AACA;AACA,MAAMC,oBAAoB,GAAGC,KAAK,IAAIA,KAAK,CAACC,QAAQ,CAACC,iBAAiB;AACtE,MAAMC,cAAc,GAAGH,KAAK,IAAIA,KAAK,CAACC,QAAQ,CAACG,WAAW;AAE1D,MAAMC,qBAAqB,GAAGP,cAAc,CAC1C,CAACC,oBAAoB,EAAEI,cAAc,CAAC,EACtC,CAACD,iBAAiB,EAAEE,WAAW,KAAK;EAClC,IAAIA,WAAW,EAAE;IACf,OAAOA,WAAW,CAACE,mBAAmB;EACxC;EAEA,IAAIC,MAAM,CAACC,IAAI,CAACN,iBAAiB,CAAC,CAACO,MAAM,GAAG,CAAC,EAAE;IAC7C,MAAMC,MAAM,GAAGH,MAAM,CAACC,IAAI,CAACN,iBAAiB,CAAC,CAACS,MAAM,CACjDC,SAAS,IAAK,EAAEA,SAAS,IAAI,CAAC,WAAW,CAAC,CAC7C,CAAC;IAED,MAAMN,mBAAmB,GAAG,CAAC,CAAC;IAC9BI,MAAM,CAACG,OAAO,CAACC,KAAK,IAAI;MACtBR,mBAAmB,CAACQ,KAAK,CAAC,GAAGZ,iBAAiB,CAACY,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,WAAW,IAAI,EAAE;IAC5E,CAAC,CAAC;IACF,OAAOT,mBAAmB;EAC5B;EAEA,OAAO,IAAI;AACb,CACF,CAAC;AAED,eAAeD,qBAAqB","ignoreList":[]}