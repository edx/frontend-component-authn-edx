{"version":3,"file":"index.js","names":["React","useEffect","useRef","getConfig","useIntl","Button","Icon","Login","PropTypes","SOCIAL_AUTH_PROVIDERS","WHITE_TEXT_COLOR_PROVIDERS","messages","setCurrentOpenedForm","SocialAuthButton","EnterpriseSSOButton","LOGIN_FORM","useDispatch","EnterpriseSSO","props","formatMessage","dispatch","provider","id","name","loginUrl","registerUrl","inverseTextColor","includes","buttonRef","current","focus","handleClick","e","url","preventDefault","window","location","href","LMS_BASE_URL","redirectToLogin","createElement","className","enterprisetpaTitleHeading","providerName","isLoginForm","ref","variant","onClick","src","enterpriseTpaProviderSigninTitle","state","onMouseDown","enterprisetpaLoginButtonText","propTypes","shape","string"],"sources":["../../../src/forms/enterprise-sso-popup/index.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nimport { getConfig } from '@edx/frontend-platform';\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport { Button, Icon } from '@openedx/paragon';\nimport { Login } from '@openedx/paragon/icons';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport { SOCIAL_AUTH_PROVIDERS, WHITE_TEXT_COLOR_PROVIDERS } from './data/constants';\nimport messages from './messages';\nimport { setCurrentOpenedForm } from '../../authn-component/data/reducers';\nimport { SocialAuthButton as EnterpriseSSOButton } from '../../common-ui/SocialAuthButtons';\nimport { LOGIN_FORM } from '../../data/constants';\nimport { useDispatch } from '../../data/storeHooks';\n/**\n * This component renders the Single sign-on (SSO) button only for the tpa provider passed\n *\n * @returns {JSX.Element} rendered EnterpriseSSO component.\n */\nconst EnterpriseSSO = (props) => {\n  const { formatMessage } = useIntl();\n  const dispatch = useDispatch();\n  const {\n    provider = {\n      id: '',\n      name: '',\n      loginUrl: '',\n      registerUrl: '',\n    },\n  } = props;\n  const inverseTextColor = WHITE_TEXT_COLOR_PROVIDERS.includes(provider.name);\n  const buttonRef = useRef(null);\n  useEffect(() => {\n    if (buttonRef.current) {\n      buttonRef.current.focus();\n    }\n  }, []);\n\n  const handleClick = (e, url) => {\n    e.preventDefault();\n    window.location.href = getConfig().LMS_BASE_URL + url;\n  };\n\n  const redirectToLogin = (e) => {\n    e.preventDefault();\n    dispatch(setCurrentOpenedForm(LOGIN_FORM));\n  };\n\n  if (provider) {\n    return (\n      <div className=\"authn__popup-container d-flex flex-column w-100\">\n        <p>{formatMessage(messages.enterprisetpaTitleHeading, { providerName: provider.name })}</p>\n        {SOCIAL_AUTH_PROVIDERS.includes(provider.name) ? (\n          <EnterpriseSSOButton\n            provider={provider}\n            isLoginForm\n            inverseTextColor={inverseTextColor}\n            ref={buttonRef}\n          />\n        ) : (\n          <Button\n            id={provider.id}\n            name={provider.id}\n            variant=\"inverse-primary\"\n            className=\"w-100 text-black-50 d-flex flex-row justify-content-start align-items-center pl-3\n            authn-sso-btn__pill-shaped\"\n            onClick={(e) => handleClick(e, provider.loginUrl)}\n            ref={buttonRef}\n          >\n            <div className=\"btn-tpa__font-container\" aria-hidden=\"true\">\n              <Icon className=\"h-75\" src={Login} />\n            </div>\n            <span\n              className=\"pl-2\"\n              aria-hidden=\"true\"\n            >\n              {formatMessage(messages.enterpriseTpaProviderSigninTitle, { providerName: provider.name })}\n            </span>\n          </Button>\n        )}\n        <div className=\"mb-4\" />\n        <Button\n          id=\"other-ways-to-sign-in\"\n          name=\"other-ways-to-sign-in\"\n          variant=\"primary\"\n          state=\"Complete\"\n          className=\"w-100 authn-btn__pill-shaped\"\n          onClick={redirectToLogin}\n          onMouseDown={(e) => e.preventDefault()}\n        >\n          {formatMessage(messages.enterprisetpaLoginButtonText)}\n        </Button>\n      </div>\n    );\n  }\n  return null;\n};\n\nEnterpriseSSO.propTypes = {\n  provider: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    loginUrl: PropTypes.string,\n    registerUrl: PropTypes.string,\n  }),\n};\n\nexport default EnterpriseSSO;\n"],"mappings":"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","ignoreList":[]}